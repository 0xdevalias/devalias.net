<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>devalias.net</title>
   
   <link>http://devalias.net</link>
   <description>Follow me into the rabbit hole that is my mind and learn about topics including.. security, technology, efficiency, biohacking, health, personal growth and probably a whole lot more.
</description>
   <language>en-uk</language>
   <managingEditor> devalias</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>GraphQL: Why You Should Care</title>
	  <link>/devalias/2016/09/07/graphql-why-you-should-care/</link>
	  <author>devalias</author>
	  <pubDate>2016-09-07T00:00:00+10:00</pubDate>
	  <guid>/devalias/2016/09/07/graphql-why-you-should-care/</guid>
	  <description><![CDATA[
	     <p>If you haven&#39;t yet come across <a href="http://graphql.org/">GraphQL</a>, it&#39;s kind of exciting stuff. It&#39;s a query language developed by <a href="https://code.facebook.com/posts/">Facebook</a>, that basically lets you request exactly the data you need for the given task; no more, no less. Sounds good right?</p>

<h2>Tell me more..</h2>

<p>If you like to get into the nitty gritty of tech specs, you can head over to the <a href="https://facebook.github.io/graphql/">GraphQL Working Draft</a> (<a href="https://github.com/facebook/graphql">GitHub</a>) to have a deeper read, then play around with the <a href="https://github.com/graphql/graphql-js">reference implementation</a> in JavaScript.</p>

<p>Though if specs aren&#39;t really your style, check out &#39;<a href="https://learngraphql.com/">Learn GraphQL</a>&#39; and give their free short course a run through. Should get you up to speed!</p>

<h2>Ok. I&#39;m in!</h2>

<p>Excited? Want to dive into it? Need libraries for your particular tech stack? Head on over to the <a href="https://github.com/chentsulin/awesome-graphql">Awesome GraphQL</a> list. You&#39;re bound to find what you need!</p>

<p>For my particular tech palette I was after something <a href="http://scala-lang.org/">Scala&#39;esque</a>, maybe some <a href="http://doc.akka.io/docs/akka/2.4/scala/http/">Akka-HTTP</a> to go with it. Seems I wasn&#39;t the only one! <a href="http://sangria-graphql.org/">Sangria</a> (<a href="https://github.com/sangria-graphql/sangria">GitHub</a>) is a Scala GraphQL implementation. They even have <a href="https://github.com/sangria-graphql/sangria-akka-http-example">an Akka-HTTP based example</a>. Perfect! Throw in a little <a href="https://github.com/sangria-graphql/sangria-relay">Relay support</a> and this package is pretty much complete.</p>

<p>If you&#39;re looking for an all-in-one stack heading forward, I keep seeing a lot of good things posted by the team at <a href="http://www.apollostack.com/">Apollo Stack</a> (by the <a href="https://www.meteor.com/">Meteor</a> team), so would most definitely recommend keeping an eye on them. They also post a lot of really good articles <a href="https://medium.com/apollo-stack">on their blog</a> too.</p>

<p>For some further reading, make sure to check out:</p>

<ul>
<li><a href="https://medium.com/apollo-stack/tutorial-building-a-graphql-server-cddaa023c035">&quot;Tutorial: How to build a GraphQL server&quot; by Jonas Helfer</a></li>
</ul>

<h2>GraphQL and Relay.. What about Redux?</h2>

<p>A lot of things you&#39;ll read about GraphQL on the net will talk about it quite closely with <a href="https://facebook.github.io/relay/">Relay</a>, and given they were both released by Facebook, and sort of designed to work together, it makes a lot of sense. That said, you most definitely don&#39;t need to use Relay to take advantage of the awesomeness GraphQL provides!</p>

<p>KADIRA states it pretty well in <a href="https://kadira.io/blog/graphql/graphql-vs-relay">GraphQL vs Relay</a>:</p>

<blockquote>
<p>GraphQL provides a way to model and expose data in your app. You can use it on top of any kind of data source and use it with any kind of transport layer.</p>

<p>Relay is an efficient client-side data-fetching technology built for React. It talks to a GraphQL Schema to get data. Relay also has a server-side part that adds some features on top of GraphQL.</p>
</blockquote>

<p>There is a bunch of talk about how Relay is currently a pain to use, but Facebook seems to be <a href="https://facebook.github.io/react/blog/2016/08/05/relay-state-of-the-state.html">well aware of this issue</a> and has future plans to make it much nicer to work with.</p>

<p>I think it&#39;s definitely worth keeping an eye on Relay in the future, but if you&#39;re not quite ready to jump in, you can always take advantage of the benefits of GraphQL while sticking to something like <a href="http://redux.js.org/">Redux</a> (<a href="https://github.com/reactjs/redux">GitHub</a>). For further reading:</p>

<ul>
<li><a href="https://www.reindex.io/blog/redux-and-relay/">&quot;Comparing Redux and Relay&quot; by Mikhail Novikov</a></li>
<li><a href="https://medium.com/@matt.krick/replacing-relay-with-redux-2990c81aa807">&quot;Replacing Relay with Redux&quot; by Matt Krick</a></li>
<li><a href="https://medium.com/@thisbejim/getting-started-with-redux-and-graphql-8384b3b25c56">&quot;Getting started with Redux and GraphQL&quot; by James Childs-Maidment</a></li>
<li><a href="http://www.apollostack.com/">Apollo Stack</a></li>
<li><a href="https://github.com/mattkrick/cashay">Cashay</a>: &quot;Relay for the rest of us&quot;</li>
<li><a href="https://github.com/gyzerok/adrenaline">Adrenaline</a>: &quot;Simple Relay alternative&quot;</li>
</ul>

<h2>GraphQL vs Falcor</h2>

<p>So by now we should have a fairly good idea about what <a href="http://graphql.org/">GraphQL</a> is. So what&#39;s <a href="http://netflix.github.io/falcor/">Falcor</a>? This one comes from our friends over at <a href="http://techblog.netflix.com/">Netflix</a>. In essence, it turns all of your data sources into one giant JSON graph. Regardless of whether you&#39;re loading data remotely, have it cached locally, etc; you&#39;ll access it in the same way.</p>

<p>If you want to read deeper, I found these to be quite useful:</p>

<ul>
<li><a href="https://stackoverflow.com/questions/32057785/what-is-the-difference-between-falcor-and-graphql">&quot;What is the difference between Falcor and GraphQL?&quot; on StackOverflow</a></li>
<li><a href="https://medium.com/apollo-stack/graphql-vs-falcor-4f1e9cbf7504">&quot;GraphQL vs. Falcor&quot; by Jonas Helfer</a></li>
<li><a href="http://react-etc.net/entry/beyond-rest-graphql-vs-falcor">&quot;Beyond REST: GraphQL vs. Falcor&quot; by React-Etc</a></li>
</ul>

<p>The consensus that I came to is that it seems to be on par with GraphQL in a number of ways, but is probably a bit easier to implement and a bit less powerful overall. Apparently you could even go so far as to <a href="http://hueypetersen.com/posts/2015/10/26/querying-graphql-with-falcor/">query GraphQL with Falcor</a>, but not the other way. For my purposes, I think I&#39;ll be sticking with GraphQL.</p>

<p>It&#39;s also worth noting that Facebook has been using various flavours of GraphQL for a few years now, whereas Netflix is yet to (or has only recently) started using Falcor in production.</p>

<h2>API&#39;s: REST, HATEOS, Observables.. GraphQL!</h2>

<p>I have read SO many articles over the years about the &#39;proper&#39; way to design API&#39;s, and why styleX is so much better than styleY. With so much info out there, and so much conflicting advice (even within each supposed style), it&#39;s really easy to get stuck in analysis paralysis.</p>

<p>Greg Ziegan put together a <a href="https://medium.com/@gregoryziegan/how-graphql-taught-me-to-code-client-apps-1c631a9953bd">nice little article</a> talking about his progression along this path: from REST, through <a href="http://timelessrepo.com/haters-gonna-hateoas">HATEOS</a>, observables, etc; and how he ended up at GraphQL. Following on from this, Sashko Stubailo makes a pretty good argument about why GraphQL is <a href="https://medium.com/apollo-stack/graphql-the-next-generation-of-api-design-f24b1689756a">&quot;the next generation of API design&quot;</a>.</p>

<p>While the benefits of a GraphQL-based API seem pretty obvious to me, it&#39;s not always feasible to jump straight into shiny new tech. Maybe you need to support legacy services, interact with 3rd-party API&#39;s, or allow other developers to consume your API without them having to learn the ins and outs of GraphQL. But thankfully, we don&#39;t need to pick one over the other!</p>

<p>The GraphQL team have a pretty good article on their blog about <a href="http://graphql.org/blog/rest-api-graphql-wrapper/">wrapping REST API&#39;s in GraphQL</a>, starting purely with the client-side, and later moving it to the backend. This idea plays in SO well with some little side-projects I&#39;ve been thinking about over the years, and how it could be used to help decompose and combine existing API&#39;s.</p>

<h2>Conclusion</h2>

<p>This is a scattering of the articles and things I have read through while learning more about GraphQL, and why it is so awesome. I definitely know it&#39;s a technology that I am super excited to start utilising in my future projects.</p>

<p>Have you come across any other awesome articles/tools related to GraphQL or similar? I&#39;d love to hear about them! Let me know in the comments below.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Shared Devices Need Account Switching</title>
	  <link>/devalias/2016/08/31/shared-devices-need-account-switching/</link>
	  <author>devalias</author>
	  <pubDate>2016-08-31T00:00:00+10:00</pubDate>
	  <guid>/devalias/2016/08/31/shared-devices-need-account-switching/</guid>
	  <description><![CDATA[
	     <p>Living in share houses and using tech like the Apple TV has highlighted an annoying situation: so many apps these days want you to sign in to enable access, personalised features, etc; but most offer no good solution for when you share the device with other people.</p>

<p>There are some apps out there that handle this pretty well:</p>

<ul>
<li><a href="https://www.plex.tv/">Plex</a> allows you to switch between different users in your &#39;home&#39;, each of which can either be a fully independent account, or a &#39;managed user&#39; that exists under the main account.</li>
<li><a href="https://www.netflix.com/au/">Netflix</a> allows switching between different users under the one subscription. While this is ok.. it doesn&#39;t work so well for a share house. What if we each have our own Netflix subscriptions, but want to share the device without having to log out and back in to our own accounts?</li>
</ul>

<p>And then there are so many apps that don&#39;t even seem to give the option, two of which immediately jump to mind for me:</p>

<ul>
<li><a href="https://www.youtube.com/">YouTube</a> let&#39;s you sign in to a single account, but no switching features save for logging out.</li>
<li><a href="https://www.ted.com/">TED</a>&#39;s app suffers from the same issue.</li>
</ul>

<p>This could be fixed at the individual app level. It would be REALLY nice to see support for multiple account switching added to any app made for a device that could potentially be shared (Apple TV/etc, far less likely to be useful on an iPhone.. but it might be for some users) But this requires extra effort from every app developer out there. Perhaps a common framework could be developed to help support this.. but then making it generic enough to fit into everyone&#39;s different architectures would be a challenge.</p>

<p>An even better solution could be baked into the OS itself by Apple.. I boot up my Apple TV and am presented with an account chooser asking which particular registered user I am. If I haven&#39;t already logged in, there&#39;s the option for signing in to my Apple account to add myself as a new user. Once logged in, I&#39;m presented with my own homescreen of apps, laid out to my own preferences, logged in to my own accounts, and saving my own personal data.</p>

<p>This poses some issues about duplication of apps between users, space requirements, etc. So a mid-ground could be allowing the owner/&#39;master&#39; user to control app installation, but then for each other user to be able to maintain their own stored data/signin status/etc.</p>

<p>What do you think? Is this a feature you&#39;d use, or does it just seem like over-engineered bloat? Let me know your thoughts in the comments!</p>

	  ]]></description>
	</item>

	<item>
	  <title>Starting a New Web Application (Part 1): An Exploration of Options</title>
	  <link>/devalias/2016/08/24/starting-a-new-web-application-1-an-exploration-of-options/</link>
	  <author>devalias</author>
	  <pubDate>2016-08-24T00:00:00+10:00</pubDate>
	  <guid>/devalias/2016/08/24/starting-a-new-web-application-1-an-exploration-of-options/</guid>
	  <description><![CDATA[
	     <p>Finding myself with some free time (and looking into starting a new project), I thought I might catch myself up on the state of web technologies, and what might be a good stack to work with.</p>

<p>The details collected here are most certainly not a complete layout of the entire landscape, and there will no doubt be leanings toward my personal tastes (<a href="http://www.reactivemanifesto.org/">reactive</a>, api-driven, etc). You should use this more as a starter into your own deeper research than as a source of ultimate truth. With that out of the way, let&#39;s get into it!</p>

<p><strong>Quicklinks</strong></p>

<ul>
<li><a href="#frontend">Frontend</a>

<ul>
<li><a href="#frontend-frameworks">Frameworks</a></li>
<li><a href="#frontend-ui">UI</a></li>
<li><a href="#frontend-scripting">Scripting</a></li>
</ul></li>
<li><a href="#backend">Backend</a></li>
<li><a href="#tooling">Tooling</a></li>
<li><a href="#conclusions">Conclusions</a></li>
</ul>

<h2><a name="frontend"></a>Frontend</h2>

<p>The frontend is the pretty, interactive, main part that people will be seeing. You can have the most amazingly streamlined and perfect backend code, but noone&#39;s going to notice and love it without a strong frontend to back it up.</p>

<p><strong><a name="frontend-frameworks"></a>Frameworks</strong></p>

<p>The days of raw JavaScript and jQuery selectors is long gone. We&#39;re looking for a nice, modern framework to help put together our frontend. Here&#39;s a little selection of some of our options:</p>

<ul>
<li><a href="https://facebook.github.io/react/">React</a> (<a href="https://github.com/reactjs">GitHub</a>) (most likely with a flavour of <a href="https://facebook.github.io/flux/">Flux</a> (<a href="https://github.com/facebook/flux">GitHub</a>))

<ul>
<li>A frontend framework from Facebook that is taking the web by storm. Probably my personal favourite from what I&#39;ve seen so far.</li>
<li>It even let&#39;s you <a href="https://facebook.github.io/react-native/">build for native devices</a>!</li>
</ul></li>
<li><a href="https://angular.io/">Angular (v2)</a> (or if you like outdated for some reason <a href="https://angularjs.org/">AngularJS (v1)</a>)

<ul>
<li>Also <a href="https://mobile.angular.io/">available for native devices</a></li>
<li>I was a big fan of AngularJS (v1), and I want to like v2, but I don&#39;t think it will be my main choice.</li>
</ul></li>
<li>There are a TON of other frontend frameworks, of varying popularity and support. I won&#39;t delve into them much, but there&#39;s heaps of info out there

<ul>
<li><a href="http://emberjs.com/">Ember</a></li>
<li><a href="https://vuejs.org/">Vue.js</a>

<ul>
<li>From reading around the web, there&#39;s a decent amount of good stuff talking about Vue. In the end I decided against it since it&#39;s not supported by a big backer, and the skills aren&#39;t as useful on a resume. That said, for a personal project it could be a great fit!</li>
<li><a href="https://vuejs.org/guide/comparison.html">https://vuejs.org/guide/comparison.html</a></li>
<li><a href="http://blog.evanyou.me/2015/10/25/vuejs-re-introduction/">http://blog.evanyou.me/2015/10/25/vuejs-re-introduction/</a></li>
<li><a href="http://vuejs.org/2016/04/27/announcing-2.0/">http://vuejs.org/2016/04/27/announcing-2.0/</a></li>
<li><a href="https://github.com/vuejs/vue">vue</a>, <a href="https://github.com/vuejs/vue-rx">vue-rx</a>, <a href="https://github.com/vuejs/vue-resource">vue-resource</a>, <a href="https://github.com/vuejs/vue-router">vue-router</a>, <a href="https://github.com/vuejs/vuex">vuex</a>, <a href="https://github.com/revue/revue">revuew</a></li>
</ul></li>
<li><a href="http://aurelia.io/">Aurelia</a></li>
<li><a href="http://riotjs.com/">Riot</a> (<a href="https://muut.com/blog/technology/riot-2.0/">v2</a>)</li>
</ul></li>
</ul>

<p>As with most things, every man and his dog has their own opinion, so here are a few comparisons I found useful:</p>

<ul>
<li><a href="https://www.ociweb.com/resources/publications/sett/comparison-of-angular-2-and-react/">&quot;Comparison of Angular 2 and React&quot; by Mark Volkmann and Lance Finney</a></li>
<li><a href="http://blog.backand.com/angular-2-vs-react/">&quot;Angular 2 vs. React&quot; by Itay Herskovits</a></li>
<li><a href="https://medium.freecodecamp.com/angular-2-versus-react-there-will-be-blood-66595faafd51">&quot;Angular 2 versus React: There Will Be Blood&quot; by Cory House</a></li>
<li><a href="https://rlafranchi.github.io/2016/05/03/vue-vs-react/">&quot;Vue.js vs React.js&quot; by Richard LaFranchi</a></li>
<li><a href="https://forums.meteor.com/t/why-doesnt-mdg-just-adopt-vue-js-and-forget-about-react-vs-blaze/13926/6">&quot;Why doesn’t MDG just adopt Vue.js and forget about React vs Blaze?&quot;</a></li>
</ul>

<p><strong><a name="frontend-ui"></a>UI</strong></p>

<p>Even if you like to go oldschool and code your site by hand in notepad/vi, you can&#39;t deny the ease/benefits of using a frontend UI framework.</p>

<ul>
<li><a href="https://getbootstrap.com/">Bootstrap</a> (<a href="https://blog.getbootstrap.com/2015/08/19/bootstrap-4-alpha/">v4</a>)

<ul>
<li>Released by Twitter, and arguably one of the most used frontend UI frameworks out there.</li>
<li><a href="https://react-bootstrap.github.io/">React-Bootstrap</a> (<a href="https://github.com/react-bootstrap/react-bootstrap">GitHub</a>)</li>
<li><a href="https://ng-bootstrap.github.io/#/home">ng-bootstrap</a> by the angular-ui team (<a href="https://github.com/ng-bootstrap/ng-bootstrap">GitHub</a>)</li>
<li><a href="https://valor-software.com/ng2-bootstrap/">ng2-bootstrap</a> by valor-software (<a href="https://github.com/valor-software/ng2-bootstrap">GitHub</a>)</li>
</ul></li>
<li><a href="http://foundation.zurb.com/">Foundation</a>

<ul>
<li>While not as well known as the other two mentioned here, those that make use of foundation swear by it.</li>
<li><a href="https://react.foundation/">React-Foundation</a> (<a href="https://github.com/nordsoftware/react-foundation">GitHub</a>)</li>
<li><a href="https://aruberto.github.io/react-foundation-components/">React-Foundation-Components</a></li>
</ul></li>
<li><a href="https://material.google.com/">Material Design</a>

<ul>
<li>Following a set of design principals from Google, this lays out a slick, consistent look and feel.</li>
<li><a href="https://getmdl.io/">Material Design Lite</a></li>
<li><a href="http://www.material-ui.com/">For React</a> (<a href="https://github.com/callemall/material-ui">GitHub</a>)</li>
<li><a href="https://material.angular.io/">For Angular (v2)</a> (<a href="https://github.com/angular/material2">GitHub</a>)</li>
<li><a href="https://material.angularjs.io/">For AngularJS (v1)</a> (<a href="https://github.com/angular/material">GitHub</a>)</li>
</ul></li>
</ul>

<p>Can&#39;t decide? Try some comparisons:</p>

<ul>
<li><a href="http://blog.teamtreehouse.com/the-rundown-bootstrap-vs-google-mdl-vs-foundation">&quot;The Rundown: Bootstrap vs. Google MDL vs. Foundation&quot; by treehouse</a></li>
<li><a href="https://dannyherran.com/2016/03/state-of-affairs-bootstrap-4-vs-foundation-6/">&quot;State of affairs: Bootstrap 4 vs Foundation 6.2&quot; by Danny Herran</a></li>
</ul>

<p><strong><a name="frontend-scripting"></a>Scripting</strong></p>

<p>Modern web apps live by the functionality they enable in the browser, and to do this, we need a JS-esque language. Your chosen frontend framework may sway your choice (eg. Angular (v2) has a strong preference for TypeScript), but ultimately, it&#39;s up to what you/your team feel comfortable with. With <a href="https://github.com/jashkenas/coffeescript/wiki/list-of-languages-that-compile-to-js">so many options</a> out there, it&#39;s hard to pick.. And of course, you could always stick to plain JavaScript.. and with the new features coming in <a href="http://es6-features.org/">ES6</a> (eg. <a href="http://www.html5rocks.com/en/tutorials/es6/promises/">promises</a>) and beyond, it might be a good choice.</p>

<ul>
<li><a href="https://babeljs.io/">Babel</a>

<ul>
<li>A transpiler that lets you play with all the fun features of JavaScript ES6 and beyond, while maintaining compatibility with all of the older browsers.</li>
</ul></li>
<li><a href="https://www.typescriptlang.org/">TypeScript</a> (<a href="https://github.com/Microsoft/TypeScript">GitHub</a>)

<ul>
<li>&quot;TypeScript is a typed superset of JavaScript that compiles to plain JavaScript&quot;</li>
<li>If you&#39;re using Angular (v2) and like sticking to convention, this is the one for you.</li>
</ul></li>
<li><a href="http://coffeescript.org/">CoffeeScript</a> (or maybe <a href="https://github.com/michaelficarra/CoffeeScriptRedux">v2</a>)

<ul>
<li>This used to be my choice, but looking at the other options available now, I think i&#39;ll be moving on.</li>
<li>As always, there are a bunch of arguments for and against..

<ul>
<li><a href="https://robots.thoughtbot.com/replace-coffeescript-with-es6">&quot;Replace CoffeeScript with ES6&quot; by Blake Williams</a></li>
<li><a href="http://tech.noredink.com/post/111583727108/dont-replace-coffeescript-with-es6-transpilers">&quot;Don’t Replace CoffeeScript with ES6 Transpilers&quot; by Richard Feldman</a></li>
<li>etc</li>
</ul></li>
<li>If you&#39;re looking for a way out, why not <a href="https://github.com/decaffeinate/decaffeinate">decaffeinate</a>?</li>
</ul></li>
<li><a href="https://flowtype.org/">Flow</a> (<a href="https://github.com/facebook/flow">GitHub</a>)

<ul>
<li>While it&#39;s not a language unto itself, it does allow you the benefits of typed JavaScript without having to dive into something like TypeScript.</li>
</ul></li>
<li><a href="https://www.scala-js.org/">Scala.js</a>

<ul>
<li>A little left field, this transpiles Scala code into JavaScript. While I probably wouldn&#39;t see myself using this as a main choice, it could make for some interesting reusability between front and backend.</li>
</ul></li>
</ul>

<h2><a name="backend"></a>Backend</h2>

<p>My preferences for backend tech stacks lean heavily towards <a href="http://www.scala-lang.org/">Scala</a> and the <a href="https://www.lightbend.com/platform">Lightbend Reactive Platform</a> these days, but I will make quick mention of some of the other options available.</p>

<ul>
<li><a href="http://doc.akka.io/docs/akka/2.4/scala/http/">Akka-HTTP</a>

<ul>
<li>Taking the power of asynchronous, message based actors, and applying them to HTTP. Definite win.</li>
<li><a href="https://softwaremill.github.io/bootzooka/">Bootzooka</a> (<a href="https://github.com/softwaremill/bootzooka">GitHub</a>)

<ul>
<li>&quot;Bootzooka is a simple application scaffolding project to allow quick start of development for modern, web based applications.&quot;</li>
<li>While not perfect, it&#39;s a decent implementation of a starter app, tying together some useful technologies.</li>
</ul></li>
</ul></li>
<li><a href="https://www.playframework.com/">Play Framework</a>

<ul>
<li>&quot;Play is a high-productivity Java and Scala web application framework that integrates the components and APIs you need for modern web application development.&quot;</li>
</ul></li>
<li><a href="https://github.com/airbnb/hypernova">Hypernova</a>

<ul>
<li>&quot;A service for server-side rendering your JavaScript views&quot;</li>
<li>While not a choice unto itself, this should help speed things up and keep your site nice and search engine friendly.</li>
</ul></li>
<li>You also have all of your other typical options

<ul>
<li><a href="https://www.ruby-lang.org/en/">Ruby</a>

<ul>
<li><a href="http://rubyonrails.org/">Ruby on Rails</a></li>
<li><a href="http://www.sinatrarb.com/">Sinatra</a></li>
<li><a href="https://nodejs.org/en/">Node</a></li>
<li><a href="http://expressjs.com/">Express</a>: &quot;Fast, unopinionated, minimalist web framework for Node.js&quot;</li>
<li><a href="https://www.meteor.com/">Meteor</a>: &quot;Meteor is an open source platform for web,</li>
<li><a href="http://noeticforce.com/best-nodejs-frameworks-for-web-and-app-development">&quot;Node.js Frameworks: The 10 Best for Web and Apps Development&quot; by noeticsunil</a>
mobile, and desktop.&quot;</li>
</ul></li>
<li><a href="https://www.python.org/">Python</a>

<ul>
<li><a href="https://www.djangoproject.com/">Django</a></li>
<li><a href="https://wiki.python.org/moin/WebFrameworks">Web Frameworks for Python</a></li>
</ul></li>
<li><a href="https://secure.php.net/">PHP</a>

<ul>
<li><a href="https://octobercms.com/">October</a>: &quot;October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. A simple and modular CMS that grows with you, with a precise and beautiful interface that comes as second nature.&quot;</li>
<li><a href="https://laravel.com/">Laravel</a></li>
</ul></li>
<li>etc</li>
</ul></li>
</ul>

<h2><a name="tooling"></a>Tooling</h2>

<p>With the crazy mix of technologies and steps involved in modern web app development, it makes a ton of sense to tie it all together with some automation.</p>

<ul>
<li><a href="https://webpack.github.io/">Webpack</a> (<a href="https://github.com/webpack/webpack">GitHub</a>)

<ul>
<li>&quot;Webpack is a bundler for modules. The main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.&quot;</li>
<li><a href="http://blog.andrewray.me/webpack-when-to-use-and-why/">&quot;Webpack: When To Use And Why&quot; by Andrew Ray</a></li>
<li><a href="https://github.com/webpack/less-loader">https://github.com/webpack/less-loader</a></li>
<li><a href="https://github.com/shakacode/bootstrap-loader">https://github.com/shakacode/bootstrap-loader</a></li>
</ul></li>
<li><a href="http://gulpjs.com/">Gulp</a> (<a href="https://github.com/gulpjs/gulp">GitHub</a>

<ul>
<li>Gulp is a streaming javascript task runner that lets you automate tasks.</li>
</ul></li>
<li><a href="http://gruntjs.com/">Grunt</a> (<a href="https://github.com/gruntjs/">GitHub</a>)

<ul>
<li>Grunt is basically the older, less streaming, less awesome version of Gulp.</li>
</ul></li>
</ul>

<p>While a little different in purpose to the things mentioned above, getting everything nicely tested and deployed is always good:</p>

<ul>
<li><a href="https://bitbucket.org/product/features/pipelines">Bitbucket Pipelines</a>: &quot;Build, test and deploy from Bitbucket&quot;</li>
</ul>

<h2><a name="conclusions"></a>Conclusions</h2>

<p>Hopefully this has given you a decent starting point for figuring out what combination of technologies is going to work best for your next project. If you want to see the direction I&#39;ve decided to go, make sure you read on in <a href="#TODO">Part 2</a>.</p>

<p>Have I missed something important? Not given love to your favourite stack? Got a cool pointer? Or just want to say hi? Let me know in the comments!</p>

	  ]]></description>
	</item>

	<item>
	  <title>Bulletproof Quarterly Biohacking Box #7</title>
	  <link>/devalias/2016/07/21/bulletproof-quarterly-biohacking-box-7/</link>
	  <author>devalias</author>
	  <pubDate>2016-07-21T00:00:00+10:00</pubDate>
	  <guid>/devalias/2016/07/21/bulletproof-quarterly-biohacking-box-7/</guid>
	  <description><![CDATA[
	     <p>A bit of a change from the tech content today. I&#39;ve been thinking about it for a while, and have decided to start consolidating all of my interests/thoughts/posts onto this site. The blog will still mostly be tech leaning, but some posts will start branching out toward my other interests such as biohacking, human performance, efficiency, etc.</p>

<p>With that out of the way, this is just a quick post to show off what came in the latest <a href="https://quarterly.co/products/daveasprey">Bulletproof Quarterly Biohacking Box</a> from Dave Asprey aka The Bulletproof Exec.</p>

<p>If you don&#39;t know what quarterly is, basically you subscribe to interesting people, and every three months you receive a curated box of interesting goodies and discount codes from them. I&#39;ve been subscribed to this one since the beginning, and have got some pretty cool stuff out of it. While I won&#39;t go into as much detail with the previous boxes, I might note a few things of particular interest.</p>

<h2>BIO07</h2>

<ul>
<li><a href="https://quarterly.co/BIO07">BIO07 Unboxing Video</a>

<ul>
<li>0:57 <a href="https://frankgreen.com.au/shop/coffee-cups.html">Frank Green Smart Travel Mug</a></li>
<li>2:43 <a href="http://www.airoasis.com/shop/air-quality-test-kit">Air Oasis Indoor Air Quality Test</a></li>
<li>5:00 <a href="https://www.acurite.com/environments/humidity.html">Acurite Humidity Monitor</a></li>
<li>6:10 <a href="https://www.zivameditation.com/">Ziva Meditation Package</a> (door tag, essential oils, guided visualisation downloads)</li>
<li>8:31 <a href="http://www.blenderbottle.com/shaker-bottles/blenderbottle-gostak">Blender Bottle GoStak Travel Bottles</a></li>
<li>9:33 <a href="http://motherdirt.com/">Mother Dirt Starter Package</a> (topical probiotic shampoo/etc)</li>
<li>13:28 Brain Octane Oil (from pure coconut oil, no palm oil)</li>
<li>16:51 <a href="http://www.airoasis.com/shop/air-oasis-mobile-sanifier">Air Oasis Mobile Sanifier</a> (Golden Ticket)</li>
<li>18:48 <a href="https://www.aquatruwater.com/">Countertop reverse osmosis unit</a> (40% off, US$349, 5 golden tickets)</li>
<li>21:48 <a href="http://www.humancharger.com/">Human Charger</a> (30% off, 10 golden tickets)</li>
<li>24:46 Air Oasis discount card</li>
<li>25:04 2x double passes to the <a href="http://www.bulletproof.com/conference/">2016 Bulletproof conference</a> (golden ticket)</li>
</ul></li>
</ul>

<h2>Previous Boxes</h2>

<ul>
<li><a href="https://quarterly.co/BIO06">BIO06 - March 2016</a>

<ul>
<li><a href="https://fitnessgenes.com/genetic-workout-systems/starter-system/">FitnessGenes Starter System</a></li>
<li><a href="http://www.core150.com/">Core150 Attitude Shaker</a></li>
<li><a href="https://www.primallifeorganics.com/products/grunt-primal-lip-balm">Grunt Lip Balm from Primal Life Organics</a></li>
<li>Bulletproof Collagen Bars</li>
<li>Etc</li>
</ul></li>
<li><a href="https://quarterly.co/BIO05">BIO05 - December 2015</a>

<ul>
<li><a href="https://thebrainstimulator.net/">The Brain Stimulator Travel Model</a></li>
<li><a href="http://www.powdercity.com/products/aniracetam-capsules">Aniracetam Capsules from Powder City</a></li>
<li><a href="https://www.focusatwill.com/">60-day Membership to Focus@Will</a></li>
<li><a href="https://www.bulletproofexec.com/wp-content/uploads/2015/12/BULLETPROOF-CHEF-EBOOK.pdf">The Bulletproof Chef e-book</a></li>
<li>Etc</li>
</ul></li>
<li><a href="https://quarterly.co/BIO04">BIO04 - September 2015</a>

<ul>
<li><a href="https://www.defendershield.com/shop/defenderpad-laptop-radiation-heat-shield/">DefenderPad</a> with custom Bulletproof branding</li>
<li><a href="http://www.60beat.com/category_s/43.htm">60Beat BLUE Heart Rate Monitor</a></li>
<li><a href="https://itunes.apple.com/au/app/bulletproof-stress-detective/id899336349?mt=8">Bulletproof Stress Detective App Download</a></li>
<li>Earplanes</li>
<li>Etc</li>
</ul></li>
<li><a href="https://quarterly.co/BIO03">BIO03 - May 2015</a>

<ul>
<li>Bulletproof Glutathione Force</li>
<li>Ancient Organics Ghee</li>
<li><a href="http://vigr.ca/collections/vigr/products/premium-vigr-elk-velvet-antler">VIGR Elk Velvet Antler</a></li>
<li><a href="https://givemethedirt.com/products/the-dirt-trace-mineral-tooth-powder">The Dirt Toothbrushing Powder</a></li>
<li>Etc</li>
</ul></li>
<li><a href="https://quarterly.co/BIO02">BIO02 - February 2015</a>

<ul>
<li><a href="https://www.underarmour.com/en-us/ua-armourbite-mouthpiece/pid1246642">ArmourBite Mouthpiece by Under Armour</a></li>
<li><a href="http://www.mobilitywod.com/product/supernova-80mm/">Gemini/Supernova by MobilityWOD</a></li>
<li><a href="http://www.berkeleytest.com/index.html">Nitric Oxide test strips by Berkeley Test</a></li>
<li><a href="http://www.foursigmatic.com/four-sigma-foods-101-cordyceps">Instant Cordyceps by Four Sigma</a></li>
<li>Etc</li>
</ul></li>
<li><a href="https://quarterly.co/BIO01">BIO01 - November 2014</a>

<ul>
<li><a href="http://www.surthrival.com/colostrum-powder-6-5oz.html">Surthrival Colostrum Powder</a></li>
<li><a href="http://www.aerobie.com/product/aeropress/">AeroPress Coffee Maker</a></li>
<li><a href="http://restwise.com/">6-month RestWise.com membership</a></li>
<li><a href="http://www.perfectsupplements.com/Perfect-Desiccated-Liver-p/desiccatedliver120.htm">Perfect desiccated liver capsules</a></li>
<li><a href="http://www.btnx.com/Product.aspx?id=1923">BTNX 10-parameter urinalysis strips</a></li>
<li>Etc</li>
</ul></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>Accessing Files from other Time Machine backups</title>
	  <link>/devalias/2016/07/07/access-files-from-other-time-machine-backups/</link>
	  <author>devalias</author>
	  <pubDate>2016-07-07T00:00:00+10:00</pubDate>
	  <guid>/devalias/2016/07/07/access-files-from-other-time-machine-backups/</guid>
	  <description><![CDATA[
	     <p>There are two main methods for accessing files from other Time Machine backups:</p>

<ol>
<li>Using Time Machine</li>
<li>Accessing the backup file directly</li>
</ol>

<p>Before we get started, if you&#39;re using Time Capsule or a network volume for backup, you first need to navigate to the backup location and double click to mount the <code>.sparsebundle</code>. (it may ask you for a password if the backup is encrypted) Once that&#39;s done, continue as normal below.</p>

<h2>Using Time Machine</h2>

<ul>
<li>Hold alt/option</li>
<li>Click on the Time Maching (backup) icon in the menu bar</li>
<li>Select &quot;Browse Other Backup Disks...&quot;</li>
<li>Select the backup you want to browse.</li>
</ul>

<h2>Accessing the backup file directly</h2>

<p>Unfortunately while trying to access my old machine&#39;s backup file, the above method didn&#39;t want to work for me. Luckily, we can get access to the files the good old fashioned manual way!</p>

<ul>
<li>Locate and mount the <code>.sparsebundle</code></li>
<li>Navigate to the <code>Backups.backupdb/yourmachinename/Latest</code> folder</li>
<li>Enjoy!</li>
</ul>

<h2>References</h2>

<ul>
<li><a href="http://www.creativetechs.com/tipsblog/access-files-from-other-time-machine-backups/">http://www.creativetechs.com/tipsblog/access-files-from-other-time-machine-backups/</a></li>
<li><a href="https://apple.stackexchange.com/questions/158645/recover-certain-files-from-time-machine-from-previous-mac">https://apple.stackexchange.com/questions/158645/recover-certain-files-from-time-machine-from-previous-mac</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>v3.0 -  Now with more Hyde</title>
	  <link>/devalias/2016/05/22/v3-now-with-more-hyde/</link>
	  <author>devalias</author>
	  <pubDate>2016-05-22T00:00:00+10:00</pubDate>
	  <guid>/devalias/2016/05/22/v3-now-with-more-hyde/</guid>
	  <description><![CDATA[
	     <p>Time for another rebirth! As you may have noticed, I haven&#39;t really written much over the last year or two. While I&#39;ve been busy, distracted and occasionally just lazy, I&#39;ve mostly found that Tumblr&#39;s interface is just far too much effort to write in. And if something is needlessly too much effort, it&#39;s not going to get done.</p>

<p>Enter <a href="https://jekyllrb.com/">Jekyll</a>, the static website builder. I&#39;ve been intending to put something together on this platform forever.. The first iteration started in <a href="http://octopress.org/">Octopress</a> a year or more back, but never really went anywhere since the default theme was kind of ugly. Decided to take another stab at things this year while I was between jobs (free time == productivity!), found a theme that I liked and started hacking away. With a few months of scattered hacking and procrastination, it&#39;s finally actually on the internet, yay!</p>

<p>Being a static site, I&#39;m taking advantage of <a href="https://pages.github.com/">GitHub Pages</a>. While it gives me free hosting, it also means I&#39;m now living my <a href="/devalias/2012/01/04/resolutions-for-11111011100-2012/">previous mantra</a> of &#39;open source everything&#39;. You can access the <a href="https://github.com/alias1/devalias.net">files used to generate the site</a> and <a href="https://github.com/alias1/devalias.net/issues">create an issue</a>/pull request to fix up any typos/errors you might find along the way :)</p>

<p>Given it&#39;s now only mildly more effort for me to write a post here as it is to save my notes in random text files on my computer, I&#39;ll hopefully put more online.. We shall see.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Dogedraw, now with more Nyaan!</title>
	  <link>/devalias/2015/04/20/dogedraw-now-with-more-nyaan/</link>
	  <author>devalias</author>
	  <pubDate>2015-04-20T12:00:00+10:00</pubDate>
	  <guid>/devalias/2015/04/20/dogedraw-now-with-more-nyaan/</guid>
	  <description><![CDATA[
	     <p>Over the last few days I&#39;ve been mentoring web dev at <a href="http://hact.io/">HS.HACT.IO</a>, inspiring a group of younger kids to get into tech as creators. One of the other mentors showed us a site he previously put together, <a href="http://dogedraw.com/">DogeDraw</a>. After playing around with it for a little, I decided it was a little too manual, so started hacking away in the JS console to make it more fun.</p>

<p>A little while (and far too long typing out pixel art as code) later, and we have nyaan hacks! You can clear a section of the screen with a solid block of colour, or better yet, stamp out some pixel art nyaan cat across the page!</p>

<script src="https://gist.github.com/alias1/e8bb28726a37854606ad.js"> </script>

	  ]]></description>
	</item>

	<item>
	  <title>Kiwicon 8 (2014) - Some quick notes</title>
	  <link>/devalias/2014/12/16/kiwicon-8-2014-some-quick-notes/</link>
	  <author>devalias</author>
	  <pubDate>2014-12-16T08:08:04+11:00</pubDate>
	  <guid>/devalias/2014/12/16/kiwicon-8-2014-some-quick-notes/</guid>
	  <description><![CDATA[
	     <ul>
<li><a href="https://kiwicon.org/">Kiwicon</a>

<ul>
<li><a href="http://2014.kiwicon.org/">2014</a></li>
<li><a href="http://2014.kiwicon.org/the-con/schedule/">Schedule</a></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/">Talks</a></li>
</ul></li>
</ul>

<hr>

<p>This was most definitely one of the most interesting, exciting, and downright awesome &#39;con experiences i&#39;ve ever had! In the past i&#39;ve pretty much kept to myself, watched the talks and headed home, but hung out/chatted/discussed with a lot of people over the course of the week, and it was epic! So so so definitely worthwhile!!</p>

<p>Not sure of the best way to go about this, so will just list out the different presentations and anything of interest/note from them.</p>

<p>I assume slides/etc should be up later on, so if something looks interesting, keep an eye out for that.</p>

<h2><a href="http://2014.kiwicon.org/the-con/schedule/#Thursday11December">Thursday</a></h2>

<ul>
<li><a href="https://kiwicon.org/the-con/talks/#e146">Eve, Mallory, Ocean&#39;s 11, and Jack Bauer: Adversaries Real and Imagined</a>

<ul>
<li>Nice overview of the different kinds of attackers, what they tend to be after, etc</li>
<li>Basically highlighted that you need to know what they are after and what it is worth, and balance security accordingly</li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e149">Breaking Bricks and Plumbing Pipes: Cisco ASA a Super Mario Adventure</a>

<ul>
<li>Interesting talk about a plethora of security flaws found in Cisco firewall to gain a pivot point into the network</li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e150">Asymmetric Defense, and your buyers guide to Threat Intelligence</a>

<ul>
<li>Essentially talked about how a lot of &#39;threat intelligence&#39; out there is crap, and treated as &#39;more is better&#39; rather than &#39;&#39;better is better&#39;</li>
<li>Talked about how there needs to be standardises formats for digitally sharing/consuming threat intelligence</li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e151">Seeing Blu</a>

<ul>
<li>Step by step walkthrough and thought process of how he hacked his BluRay player to enable multi region support so he could watch his copy of Hackers.</li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e152">OneRNG - a verifiable and Open Hardware Random Number Generator from NZ</a>

<ul>
<li>Small open source/hardware device to generate truly random entropy, to be fed back into a random number generator</li>
<li>Recently released on kickstarter: <a href="https://www.kickstarter.com/projects/moonbaseotago/onerng-an-open-source-entropy-generator">https://www.kickstarter.com/projects/moonbaseotago/onerng-an-open-source-entropy-generator</a></li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e147">Eradicating the Human Problem</a>

<ul>
<li>Really excellent talk by @lady_nerd talking about social engineering and humans as the weak point in security</li>
<li>Talked about how we need a better way to assess and track the human element of security, rather than treating it as too hard/unobtainable</li>
<li>Briefly discussed a tool in development designed to assist with mapping out the social interactions of a company in a way that allows assessing potential risk/etc, and determining the flow of an attack through the social elements of a company</li>
<li>Slides: <blockquote class="twitter-tweet"><p lang="en" dir="ltr">Want to see the trailer/slides for my <a href="https://twitter.com/hashtag/kiwicon?src=hash">#kiwicon</a> talk &#39;Eradicating the human problem&#39;. Here&#39;s a blog post with links <a href="http://t.co/I5bacKHRVb"><a href="http://t.co/I5bacKHRVb">http://t.co/I5bacKHRVb</a></a></p>&mdash; Laura Bell (@lady<em>nerd) &lt;a href=&quot;<a href="https://twitter.com/lady">https://twitter.com/lady</a></em>nerd/status/544230404170194945&quot;&gt;December 14, 2014</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e142">Security the Etsy way: Effective security in a continuous deployment culture</a>

<ul>
<li>Excellent talk by @iodboi about mixing in security people with the general developers, not blocking progress/saying no while still maintaining security, making security liked/approachable, etc.</li>
<li>So many awesome points and discussions, not to mention showing just how epic a place Etsy is to work.</li>
<li>Caught up with him a decent bit after his talk and had some awesome chats, a really cool and down to earth guy</li>
<li>Etsy are a great example of continuous deployment, with upwards of 50 pushes into production every day</li>
<li>One of the big points: Don&#39;t hire assholes (they will ruin all of the work you put in to enhance security/etcs image and drag everyone down) <blockquote class="twitter-tweet"><p lang="en" dir="ltr">Excellent security team management advice from <a href="https://twitter.com/iodboi">@iodboi</a> :) <a href="https://twitter.com/kiwicon">@kiwicon</a> <a href="http://t.co/8m5ZyjYFfV">pic.twitter.com/8m5ZyjYFfV</a></p>&mdash; Leigh Honeywell (@hypatiadotca) <a href="https://twitter.com/hypatiadotca/status/542870405514801152">December 11, 2014</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e153">COMSEC - Beyond Encryption</a>

<ul>
<li>Discussion on maintaining communication security, tools that are good/bad, etc</li>
<li>Almost surprisingly, Apple factime rates pretty highly on the list.</li>
<li>Pond considered THE thing to use <a href="https://pond.imperialviolet.org/">https://pond.imperialviolet.org/</a></li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e154">MitMing GSM with criminal intent</a>

<ul>
<li>Discussed the analysis and thinking, and eventual pwning of a GSM enabled home detention ankle monitor</li>
<li>Made front page of the newspaper for the talk: <a href="http://www.nzherald.co.nz/nz/news/article.cfm?c_id=1&amp;objectid=11373524">http://www.nzherald.co.nz/nz/news/article.cfm?c_id=1&amp;objectid=11373524</a></li>
<li>Same guy who broke the NZ transport card system last year</li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e143">Building a hipster catapult, or how2own your skateboard</a>

<ul>
<li>Amusing talk about taking over control of a bluetooth controlled electric skateboard, including demonstration</li>
</ul></li>
</ul>

<h2><a href="http://2014.kiwicon.org/the-con/schedule/#Friday12December">Friday</a></h2>

<ul>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e167">R00t Causes: complex systems failures and security incident response</a>

<ul>
<li>Analysis of a bridge collapse and how similar events map into security</li>
<li>Some key points: compartmentalise/isolate</li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e156">ThruGlassXfer: The TV people? Do you see them?</a>

<ul>
<li>Interesting proof of concept and discussion on using the pixels on a screen and a video camera, combined with a programmable keyboard to initiate an &#39;&#39;air gapped&#39; bidirectional communications channel.</li>
<li>Proves that if you can see it on the screen, and type into it, then you can basically bypass any other security in your way</li>
<li><a href="http://thruglassxfer.com">http://thruglassxfer.com</a></li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e144">Cyberwar before there was Cyber: Hacking WWII Electronic Bomb Fuses</a>

<ul>
<li>Research/analyse on various types of german bomb fuses, and the evolution of design/defuser used to outsmart each other</li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e157">BeEF for Vegetarians (Hooked Browser Meshed-Networks with WebRTC)</a>

<ul>
<li>Pretty cool talk by @xntrik (co-author of browser hackers handbook) about creating mesh networks from exploited browsers to minimize detection/etc from communication with the command server</li>
<li>Useful for circumventing/stealthing internal lateral exploration through a network</li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e158">An Image is Worth 1000 Frauds – Detecting Fake Images and Videos</a>

<ul>
<li>Interesting high level runthrough of some methods you can use to detect manipulated images/video</li>
<li>Linked to <a href="https://github.com/ebemunk/phoenix">https://github.com/ebemunk/phoenix</a> a lot</li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e159">Manipulating Human Minds: The Psychological Side of Social Engineering</a>

<ul>
<li>Interesting talk by @0xkitty that takes a high level look at some of things involved in social engineering and manipulating the human element of security</li>
</ul></li>
<li>Lightning talks (shorter)

<ul>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e160">Recap of the aftermath of last year&#39;s bus hacking</a></li>
<li>Decent recap of what happened/how the incident was handled (eg. poorly)</li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e161">The National Cyber Security Strategy and the Connect Smart Partnership</a></li>
<li>Some goverment guy that wasn&#39;t very engaging</li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e162">I know what you did last Wednesday: exploitation of the humble apartment video intercom</a></li>
<li>Hacked his embedded linux apartment intercomm system to find exploits that enabled stealth monitoring of EVERY apartment in his building (100&#39;s)</li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e163">Voltron: Defender of the Universe</a></li>
<li>Terminal based &#39;GUI&#39; for GDB debugging</li>
<li><a href="https://github.com/snare/voltron">https://github.com/snare/voltron</a></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e145">Random() Adventures in Minecrosoftcraft</a></li>
<li>A practical example of using analyses to defeat insecure &#39;random&#39; implementations in the context of minecraft</li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e164">Legal loopholes</a></li>
<li>Some talk about grey areas of the law/etc</li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e165">Breaking AV software</a>

<ul>
<li>Really interesting talk about just how insecure/terrible antivirus/security products in general can be (hint: VERY)</li>
<li>Showed how a large number of the top AV engines can actually end up making your system less secure due to the way they are implemented.</li>
</ul></li>
<li><a href="http://2014.kiwicon.org/the-con/talks/#e166">Hackers and Hacks, or: How I Learned to Stop Worrying and Love the MSM</a>

<ul>
<li>An enlightening talk by the reporters who engaged with &#39;&#39;rawshark&#39; and the process/pitfalls they went through to in securely communicating to release the information.</li>
<li>Made some good points about security being hard for the &#39;&#39;average&#39; person, and how so very major stories (eg. Snowden) were almost missed out on because reporters don&#39;t understand how to security well enough</li>
</ul></li>
</ul>

<h2><a href="http://2014.kiwicon.org/the-con/schedule/#Saturday13December">Saturday</a></h2>

<ul>
<li><a href="http://2014.kiwicon.org/the-con/events/#e148">Kiwicon SPIT ROAST</a>

<ul>
<li>We ate lots of meat, in a fortress!!</li>
</ul></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>MDwiki (and how to get started)</title>
	  <link>/devalias/2014/07/24/mdwiki-and-how-to-get-started/</link>
	  <author>devalias</author>
	  <pubDate>2014-07-24T03:12:31+10:00</pubDate>
	  <guid>/devalias/2014/07/24/mdwiki-and-how-to-get-started/</guid>
	  <description><![CDATA[
	     <p>(Note: Original gist can be found <a href="https://gist.github.com/alias1/a8c3c2fd7bf2f50ff666">here</a>)</p>

<p>If you haven&#39;t already heard about it, <a href="https://dynalon.github.io/mdwiki/#!index.md">MDwiki</a> is a cool little CMS/Wiki that runs entirely clientside (HTML5/Javascript) and uses <a href="https://en.wikipedia.org/wiki/Markdown">Markdown</a></p>

<p>Since it&#39;s all clientside, we can do really cool things like track our changes in git and then host it all on <a href="https://pages.github.com/">GitHub Pages</a>. That means super simple forking, contributing and sharing. Yay for open source!</p>

<h2>Setting up MDwiki with GitHub</h2>

<p>There is an <a href="https://dynalon.github.io/mdwiki/#!tutorials/github.md">official guide</a> available on the MDwiki site, but I kind of like to do things my own way, so below is how I go about setting up a new site. (I&#39;ll assume you&#39;re already setup on GitHub and know vaguely how to use it, if not, maybe checkout the guide above)</p>

<ul>
<li>On GitHub

<ul>
<li><a href="https://github.com/new">Create a new repository</a> and name it what you want (eg. <code>my-mdwiki</code>)</li>
</ul></li>
<li>Setup initial MDwiki bits

<ul>
<li><a href="https://github.com/Dynalon/mdwiki/releases">Download the latest MDwiki release</a></li>
<li>Extract it to a folder (eg. <code>my-mdwiki</code>)</li>
<li>Here you have a choice:</li>
<li><code>mdwiki.html</code> will give you MDwiki and all of it&#39;s libraries packaged as a single file</li>
<li><code>mdwiki-slim.html</code> (my preference) will give you MDwiki, but load it&#39;s libraries from a CDN (content delivery network)</li>
<li>Choose the option you want to use and rename it to <code>index.html</code></li>
<li>Next we&#39;ll need to create a <code>config.json</code> file. You can <a href="https://dynalon.github.io/mdwiki/#!customizing.md">read about how this works</a> or just use something similar to mine:</li>
</ul></li>
</ul>
<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span><span class="w">
</span><span class="nt">"lineBreaks"</span><span class="p">:</span><span class="w"> </span><span class="s2">"gfm"</span><span class="p">,</span><span class="w">
</span><span class="nt">"additionalFooterText"</span><span class="p">:</span><span class="w"> </span><span class="s2">"By &lt;a href='http://www.devalias.net/'&gt;Glenn '/dev/alias' Grant&lt;/a&gt;&lt;br /&gt;"</span><span class="p">,</span><span class="w">
</span><span class="nt">"anchorCharacter"</span><span class="p">:</span><span class="w"> </span><span class="s2">"&amp;para;"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>
<ul>
<li>Almost there, create a quick <code>navigation.md</code> (<a href="https://dynalon.github.io/mdwiki/#!quickstart.md">docs</a>) that looks something like</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang=""># Your wiki name

[Home](index.md)
[About](about.md)
[Download](download.md)
</code></pre></div>
<p>And create your first page (i&#39;ll only show you one, but the process is the same). Create a file called <code>index.md</code> (as specified in your navigation)</p>
<div class="highlight"><pre><code class="language-" data-lang=""># Hello World!

This is my first page!
</code></pre></div>
<ul>
<li>That&#39;s it for the basic site setup!</li>
<li>As a little bonus, I like to add a script to run a <code>python SimpleHTTPServer</code> for local testing called <code>run-pyserver.sh</code> (and make sure to make it executable with <code>chmod +x run-pyserver.sh</code>)</li>
</ul>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c">#!/bin/bash</span>

open http://localhost:8000
python -m SimpleHTTPServer 8000
</code></pre></div>
<ul>
<li>Now we&#39;ll setup our git repo:

<ul>
<li>Open a terminal window, and navigate to the folder you just created (eg. <code>cd ~/my-mdwiki</code>)</li>
<li>Initialise the git repo: <code>git init</code></li>
<li>Here we use some <a href="http://www.retrologic.com/jargon/M/magic.html">magic</a> (from <a href="http://git.661346.n2.nabble.com/how-to-start-with-non-master-branch-tt3284326.html#a3284821">Sean Estabrooks</a>) to tell git to call the initial branch <code>gh-pages</code> instead of <code>master</code>: <code>git symbolic-ref HEAD refs/heads/gh-pages</code></li>
<li>Add all the files we&#39;ve created so far: <code>git add .</code></li>
<li>Commit them: <code>git commit -m &quot;Initial Commit&quot;</code></li>
<li>Add your GitHub repo as a remote (making sure to replace <code>YOURUSERNAME</code> with your actual username, and <code>my-mdwiki</code> with the name of the repository you created earlier): <code>git remote add origin git@github.com:YOURUSERNAME/my-mdwiki.git</code></li>
<li>Then push it to github: <code>git push -u origin gh-pages</code></li>
</ul></li>
<li>That&#39;s pretty much it! After a short delay, your site should be available at <a href="http://YOURUSERNAME.github.io/my-mdwiki">http://YOURUSERNAME.github.io/my-mdwiki</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>Play! Framework - Seperated WS Library</title>
	  <link>/devalias/2014/06/26/play-framework-seperated-ws-library/</link>
	  <author>devalias</author>
	  <pubDate>2014-06-26T03:48:00+10:00</pubDate>
	  <guid>/devalias/2014/06/26/play-framework-seperated-ws-library/</guid>
	  <description><![CDATA[
	     <p>So as we all (should) know, <a href="https://www.playframework.com/">Play! Framework</a> has released <a href="https://www.typesafe.com/blog/announcing-play-230">v2.3.x</a></p>

<p>With it comes a <a href="https://www.playframework.com/documentation/2.3.x/Highlights23">whole range</a> of new features, including one that caught my eye:</p>

<blockquote>
<p>Play WS</p>

<p>Separate library</p>

<p>The WS client library has been refactored into its own library which can be used outside of Play. You can now have multiple WSClient objects, rather than only using the WS singleton.</p>
</blockquote>

<p>This was particularly exciting for me, as I&#39;ve grown to know, understand and love the simple abstractions the Play WS library provides.</p>

<p>Sweet! So how do I get it in my projects? Had a look over at <a href="https://github.com/playframework">playframework@Github</a> to no avail (was expecting a new repo)</p>

<p>After a little more digging, I came across the <a href="https://www.playframework.com/documentation/2.3.x/Repositories">Play! Repositories</a> page, which lead me to finding what I wanted.</p>

<p>A little xml magic later and we have the following for a maven project wanting to use the Java version of the WS library:</p>
<div class="highlight"><pre><code class="language-" data-lang="">&lt;dependencies&gt;
    &lt;groupId&gt;com.typesafe.play&lt;/groupId&gt;
    &lt;artifactId&gt;play-java-ws_2.10&lt;/artifactId&gt;
    &lt;version&gt;2.3.0&lt;/version&gt;
&lt;/dependencies&gt;

&lt;repositories&gt;
    &lt;id&gt;Typesafe Releases&lt;/id&gt;
    &lt;url&gt;http://repo.typesafe.com/typesafe/releases/&lt;/url&gt;
&lt;/repositories&gt;
</code></pre></div>
<p>Hope this saves you guys some time, and as always, happy hacking!</p>

<h2>&quot;There is no started application&quot;</h2>

<p>If you end up getting a &quot;There is no started application&quot; message when you try to use WS, you will need to do something like the following:</p>
<div class="highlight"><pre><code class="language-" data-lang="">AsyncHttpClientConfig.Builder builder = new com.ning.http.client.AsyncHttpClientConfig.Builder();
NingWSClient wsClient = new play.libs.ws.ning.NingWSClient(builder.build());

// Instead of this
//WSRequestHolder ws = WS.url(url)

// Use this
WSRequestHolder ws = wsClient.url(url)
</code></pre></div>
<p>See the following for more details:</p>

<ul>
<li><a href="http://stackoverflow.com/questions/24881145/how-do-i-use-play-ws-library-in-normal-sbt-project-instead-of-play">http://stackoverflow.com/questions/24881145/how-do-i-use-play-ws-library-in-normal-sbt-project-instead-of-play</a>

<ul>
<li>Scala - Using WSClient: <a href="http://www.playframework.com/documentation/2.3.x/ScalaWS">http://www.playframework.com/documentation/2.3.x/ScalaWS</a></li>
<li>Java - Using WSClient: <a href="http://www.playframework.com/documentation/2.3.x/JavaWS">http://www.playframework.com/documentation/2.3.x/JavaWS</a></li>
</ul></li>
</ul>

<p>(Note: The tl;dr/raw/likely most up to date notes I made for this are <a href="https://gist.github.com/alias1/288dce6b353f2a72a7d4">available as a gist</a>)</p>

	  ]]></description>
	</item>


</channel>
</rss>
