<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>devalias.net</title>
   
   <link>http://devalias.net</link>
   <description>Follow me into the rabbit hole that is my mind and learn about topics including.. security, technology, efficiency, biohacking, health, personal growth and probably a whole lot more.</description>
   <language>en_GB</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Dogedraw, now with more Nyaan!</title>
	  <link>/devalias/2015/04/20/dogedraw-now-with-more-nyaan/</link>
	  <author>devalias</author>
	  <pubDate>2015-04-20T12:00:00+10:00</pubDate>
	  <guid>/devalias/2015/04/20/dogedraw-now-with-more-nyaan/</guid>
	  <description><![CDATA[
	     <p>Over the last few days I&#39;ve been mentoring web dev at <a href="http://hact.io/">HS.HACT.IO</a>, inspiring a group of younger kids to get into tech as creators. One of the other mentors showed us a site he previously put together, <a href="http://dogedraw.com/">DogeDraw</a>. After playing around with it for a little, I decided it was a little too manual, so started hacking away in the JS console to make it more fun.</p>

<p>A little while (and far too long typing out pixel art as code) later, and we have nyaan hacks! You can clear a section of the screen with a solid block of colour, or better yet, stamp out some pixel art nyaan cat across the page!</p>

<p><noscript><pre>404: Not Found
</pre></noscript><script src="https://gist.github.com/alias1/e8bb28726a37854606ad.js"> </script></p>

	  ]]></description>
	</item>

	<item>
	  <title>Java/Scala Future/Promise Map *headsplode*</title>
	  <link>/devalias/2014/05/15/java-scala-future-promise-map-headsplode/</link>
	  <author>devalias</author>
	  <pubDate>2014-05-15T08:55:00+10:00</pubDate>
	  <guid>/devalias/2014/05/15/java-scala-future-promise-map-headsplode/</guid>
	  <description><![CDATA[
	     <p>A side by side comparison (now that I finally got it figured out!) of <a href="https://www.playframework.com/">Play Framework</a> v2.2.x promise unwrapping in <a href="https://www.java.com/en/">Java</a> and <a href="http://www.scala-lang.org/">Scala</a>. Hopefully this will be able to save some of you a bunch of mind numbing ponderings and failures.</p>

<p>&lt;3 /dev/alias</p>

<p><noscript><pre>404: Not Found
</pre></noscript><script src="https://gist.github.com/alias1/1d3b44312d8a68ddbaa5.js"> </script></p>

	  ]]></description>
	</item>

	<item>
	  <title>Hacking Unicoins for Fun and Profit (Stackoverflow.com April Fools 2014)</title>
	  <link>/devalias/2014/04/02/hacking-unicoins-for-fun-and-profit/</link>
	  <author>devalias</author>
	  <pubDate>2014-04-02T06:38:02+11:00</pubDate>
	  <guid>/devalias/2014/04/02/hacking-unicoins-for-fun-and-profit/</guid>
	  <description><![CDATA[
	     <p><a href="https://stackoverflow.com/">Stackoverflow</a> introduced an amusing little April Fools feature called &#39;Unicoins&#39;. Essentially, this currency (that you can earn by mining rocks, since all of the (rather amusing) payment options are currently unavailable&#39;) allows you to by silly upgrades for the website. From &#39;Colorful comments&#39; and &#39;Guaranteed Answer&#39; through to &#39;Voting animations&#39; which gives you &#39;happy unicorn animations everytime you vote&#39;.</p>

<p>Anyways, long story short, I saw a system and wondered how to beat it. Turns out each rock is simply an AJAX request to /unicoin/rock to get a rock ID, and when you sucessfully mine it, you POST back a static fkey (bound to each user I assume?) and the rockId to /unicoin/mine?rock=theRockId</p>

<p>I&#39;ve put together a little automagical javascript to prevent you all getting RSI. It&#39;s for health reasons.. honestly.</p>

<p>Enjoy your unicoins! &lt;3 /dev/alias</p>

<p><noscript><pre>404: Not Found
</pre></noscript><script src="https://gist.github.com/alias1/9905949.js"> </script></p>

	  ]]></description>
	</item>

	<item>
	  <title>vFeed - Wrapper/Helper Scripts For Speed and Efficiency</title>
	  <link>/devalias/2013/11/21/vfeed-wrapper-helper-scripts-for-speed-and-efficiency/</link>
	  <author>devalias</author>
	  <pubDate>2013-11-21T09:00:54+11:00</pubDate>
	  <guid>/devalias/2013/11/21/vfeed-wrapper-helper-scripts-for-speed-and-efficiency/</guid>
	  <description><![CDATA[
	     <p>Just wanted to share some quick little bash scripts I threw together to make vFeed a little quicker/more efficient for my use.</p>

<p>If you don&#39;t know it already, <a href="https://github.com/toolswatch/vfeed">vFeed</a> is an Open Source Cross Linked and Aggregated Local Vulnerability Database put together by the fine folks over at <a href="http://www.toolswatch.org/vfeed/">ToolsWatch</a>. You can query it for a whole bunch of information and details that may aid you in your pentests, all from the convenience of a local database.</p>

<p>To make life easier, I throw these scripts in my vFeed directory and symlink them from bin.</p>
<div class="highlight"><pre><code class="language-" data-lang="">cd /path/to/bin
ln -s /path/to/vFeed/bin/vfeed.sh vfeed
ln -s /path/to/vFeed/bin/vfeedcli.sh vfeedcli
ln -s /path/to/vFeed/bin/vfeed_update.sh vfeed_update
</code></pre></div>
<p>Enjoy!</p>

<p><noscript><pre>404: Not Found
</pre></noscript><script src="https://gist.github.com/alias1/7554985.js"> </script></p>

	  ]]></description>
	</item>

	<item>
	  <title>ERPScan Automator - Because Manual is Meh</title>
	  <link>/devalias/2013/08/10/erpscan-automator-because-manual-is-meh/</link>
	  <author>devalias</author>
	  <pubDate>2013-08-10T08:00:50+10:00</pubDate>
	  <guid>/devalias/2013/08/10/erpscan-automator-because-manual-is-meh/</guid>
	  <description><![CDATA[
	     <p>Another quick little tool for you guys today that I hacked together to save myself some time. This one automates running through a number of tests using the <a href="https://erpscan.com/research/free-pentesting-tools-for-sap-and-oracle/">ERPScan SAP Pentesting Tool</a></p>

<p>At time of writing, configuration is all done inside the script, with no support for command line parameters (might add them in the future)</p>

<p><noscript><pre>404: Not Found
</pre></noscript><script src="https://gist.github.com/alias1/6118709.js"> </script></p>

	  ]]></description>
	</item>

	<item>
	  <title>Ruby on Rails - Learned the hard way #1 - db:migrate</title>
	  <link>/devalias/2013/08/03/rails-lessons-learned-the-hard-way-1-db-migrate/</link>
	  <author>devalias</author>
	  <pubDate>2013-08-03T08:00:38+10:00</pubDate>
	  <guid>/devalias/2013/08/03/rails-lessons-learned-the-hard-way-1-db-migrate/</guid>
	  <description><![CDATA[
	     <p>Decided I will make this a regular little mini collection of things I learned the hard way with Ruby on Rails. So here it is, lesson #1!</p>

<p>Generate your model first, make all manual edits, and then only AFTER you have made all your manual edits (and double checked them), run rake db:migrate. It will save you a fair few headaches.</p>

<p><noscript><pre>404: Not Found
</pre></noscript><script src="https://gist.github.com/alias1/5790864.js"> </script></p>

	  ]]></description>
	</item>

	<item>
	  <title>nmap.sh - Saving Precious Seconds</title>
	  <link>/devalias/2013/07/13/nmap-sh-saving-precious-seconds/</link>
	  <author>devalias</author>
	  <pubDate>2013-07-13T08:00:00+10:00</pubDate>
	  <guid>/devalias/2013/07/13/nmap-sh-saving-precious-seconds/</guid>
	  <description><![CDATA[
	     <p>In the course of my work I end up issuing the same simple commands again and again, and while they are pretty easy to remember, they still take more time than they really need to.</p>

<p>With that in mind, here&#39;s a little bash script I threw together today to reduce the time it takes to kick off a standard (in my day to day usage) nmap scan. Hopefully you can get some use out of it.</p>

<p><noscript><pre>404: Not Found
</pre></noscript><script src="https://gist.github.com/alias1/5963377.js"> </script></p>

	  ]]></description>
	</item>

	<item>
	  <title>Gists</title>
	  <link>/devalias/2013/06/17/gists-on-tumblr/</link>
	  <author>devalias</author>
	  <pubDate>2013-06-17T05:00:00+10:00</pubDate>
	  <guid>/devalias/2013/06/17/gists-on-tumblr/</guid>
	  <description><![CDATA[
	     <p>So I figured it might be useful to be able to post gists here. Turns out it&#39;s actually pretty easy thanks to soemarko</p>

<p>true<script src="https://gist.github.com/soemarko/1395926.js"> </script></p>

	  ]]></description>
	</item>


</channel>
</rss>
